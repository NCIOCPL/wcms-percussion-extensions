## This file may contain additional velocity macros that 
## augment the built in macros
## This file must be encoded using UTF-8.


#macro(meta_header $metaDescription $longDescription $metaKeywords)##
<meta http-equiv="content-type" content="text/html;charset=utf-8" />##
#if($metaDescription && $metaDescription != '')##
<meta name="description" content="$metaDescription">##
#else##
<meta name="description" content="$longDescription">##
#end##
<meta name="keywords" content="$metaKeywords">##
#syndicate_canonical_url##
#end##

## Defines the canonical URL for the syndicated page.
#macro(syndicate_canonical_url)
#set($home_url = "http://www.cancer.gov")##
#set($pretty_url = $rx.location.generate($sys.assemblyItem))##
#if($pretty_url == "/")##
<link rel="canonical" href="$home_url" />##
#else##
<link rel="canonical" href="$home_url$pretty_url" />##
#end##
#end##

#*
	syndication_slot
	Renders a slot witholding a given set of blocked slots that are left
	out for syndication.
		$blockedTypes - A list of content types to be supressed.
		The calling template should declare this list via a statement similar to:
			#set( $blockedSlots = ["slota", "slotb", "slotc"] )
		An empty list would be declared as:
			#set( $blockedSlots = [] )
*#
#macro(syndicated_slot $slotname $header $before $after $footer $params $blockedType)##
#initslot($slotname $params)##
#if ($sys.part.render)##
#if($sys.currentslot.slot)##
#__addAaSlotImg($slotname)##
#__startAaSlotDiv($slotname)##
#if($sys.currentslot.relresults.size() > 0)##
$header##
#end##
#foreach($relresult in $sys.currentslot.relresults )##
#set($nodeIsBlocked = false)##
#foreach($blockedType in $blockedTypes)
#if($relresult.Node.definition.internalName == $blockedType)##
#set($nodeIsBlocked = true)##
#end##
#end##
#if(!$nodeIsBlocked)
$before##
#__startAaSnippetDiv($relresult $slotname)##
#__addAaSnippetImg($relresult $slotname)##
#set($body = "$rx.doc.extractBody($relresult)")##
$body##
#__endAaSnippetDiv()##
$after##
#end##
#end##
#if($sys.currentslot.relresults.size() > 0)##
$footer##
#end##
#__endAaSlotDiv()##
#end##
#end##
#endslot($slotname)##
#end


#*
	CGOV_Syndication_Html_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
	Does not include language tabs for syndication.
*#
#macro(CGOV_Syndication_Html_Date_Display)##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#set($my_updated = "Actualizaci&oacute;n:")##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#set($my_updated = "Updated:")##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<p>$my_posted #CGOV_Html_Date_Format($fieldName)</p>##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<p>$my_updated #CGOV_Html_Date_Format($fieldName)</p>##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<p>$my_reviewed #CGOV_Html_Date_Format($fieldName)</p>##
#end
#{end}##

<div class="document-dates">
#if ( $dateDisplay != '0')
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
${updateDisplay}
${reviewDisplay}
#end
#end
</div>
#end


## Used to get the Nav Image Url 
#macro(imageurl $image $status)#if ($status == "rollover" )#imghelp($image "rffBnRolloverImage")#elseif ($status=="active")#imghelp($image "rffBnActiveImage")#else#imghelp($image "rffBnInactiveImage")#end#end








## helper macro ... context=0 needs to be dynamic
#macro(imghelp $image $template)$rx.location.generate($template, $image, $rx.location.folderPath($image),$sys.assemblyItem.getFilter().getName(), $sys.assemblyItem.getSiteId().longValue(), $tools.number.toNumber($tools.list.get($sys.params.get('sys_context'), 0)) )#end

	

##propagate slot functionality start
#macro(get_navon_node)
#if(!$nav)##
#initslot("rffNav" "template=rffSnNavonLink")##
#if($sys.currentslot.relresults.size() > 0)##
#set($nav = $sys.currentslot.relresults.get(0).getBindings().get('$nav') )
#end##
#end##
#end##


#macro(node_slot_b $node $slotname $header $before $after $footer $params $body)##
#set($foundslot=false)##
#__slotsetup($slotname $params)##
#set($cloneditem = $sys.assemblyItem.clone())##
$cloneditem.setNode($node)##
#set($sys.currentslot.relresults = $rx.asmhelper.assemble($cloneditem,$sys.currentslot.slot,$completeparams))##
#if($sys.currentslot.relresults.size() > 0)##
#set($foundslot=true)##
$header##
#foreach( $relresult in $sys.currentslot.relresults )##
$before##
$body##
$after##
#end##
$footer##
#end##
#end##
   
#macro(node_slot $node $slotname $header $before $after $footer $params)##
#node_slot_b($node $slotname $header $before $after $footer $params "$rx.doc.extractBody($relresult)")
#end

 


#macro(prop_slot_b $slotname $header $before $after $footer $params $body)##
#get_navon_node()##
#set($foundslot=false)##
#initslot($slotname $params)##
#if ($sys.part.render)##
#if($sys.currentslot.slot)##
#__addAaSlotImg($slotname)##
#__startAaSlotDiv($slotname)##
#if($sys.currentslot.relresults.size() > 0)##
#set($foundslot=true)##
$header##
#end##
#foreach($relresult in $sys.currentslot.relresults )##
$before##
#__startAaSnippetDiv($relresult $slotname)##
#__addAaSnippetImg($relresult $slotname)##
$body##
#__endAaSnippetDiv()##
$after##
#end##
#if($sys.currentslot.relresults.size() > 0)##
$footer##
#end##
#__endAaSlotDiv()##
#end##
#end##
#endslot($slotname)##
#if($foundslot!=true)##
#prop_slot_nav_b($nav.self $slotname $header $before $after $footer $params $body)##
#end##
#end##

#macro(prop_slot $slotname $header $before $after $footer $params)##
#if($sys.ltActiveAssembly || $sys.activeAssembly)
#slot($slotname $header $before $after $footer $params)
#else
#prop_slot_b($slotname $header $before $after $footer $params "$rx.doc.extractBody($relresult)")
#end
#end

 

#macro(prop_slot_nav_b $node $slotname $header $before $after $footer $params $body)##
#if($foundslot!=true)##
#set($landing = false)##
##set($landing = $node.getProperty('nav:landingPage').Node)
#if($landing)##
##node_slot_b($landing $slotname $header $before $after $footer $params $body)##
#end##
#end##
#__slotsetup($slotname $params)##
#set($cloneditem = $sys.assemblyItem.clone())##
$cloneditem.setNode($node)##
#set($sys.currentslot.relresults = $rx.asmhelper.assemble($cloneditem,$sys.currentslot.slot,$completeparams))##
#if($sys.currentslot.relresults.size() > 0)##
#set($foundslot=true)##
$header##
#foreach( $relresult in $sys.currentslot.relresults )##
$before##
$body##
$after##
#end##
$footer##
#end##
## Check Parent Navon
#if($foundslot!=true && $node.getDepth() > 0)##
#prop_slot_nav_b($node.getParent() $slotname $header $before $after $footer $params $body)##
#end##
#end##

 

#macro(prop_slot_nav $node $slotname $header $before $after $footer $params)
#prop_slot_b($node $slotname $header $before $after $footer $params "$rx.doc.extractBody($relresult)")
#end

 

#macro(prop_slot_simple_b $slotname $body)#prop_slot_b($slotname "" "" "" "" "" $body)#end
#macro(prop_slot_simple $slotname)#prop_slot_simple_b($slotname "$rx.doc.extractBody($relresult)")#end
##propagate slot functionality end


##
##	Similar to the #slot macro, but displays default text if the slot is empty.  
##
## Arguments:
##	$slotname - name of the slot to be rendered.
##
##	$default - The text to be rendered if the slot is empty.
##
##	$header - If the slot has contents, the text to render before the full contents.
##
##	$before - Text to render immediately before each item in the slot.
##
##	$after - Text to render immediately after each item in the slot.
##
##	$footer - If the slot has contents, the text to render after the full contents.
##
##	$params - paramaters to pass to the slot. (e.g. template= to limit the restrict the
##			choice of templates.
##
#macro(slot_with_default_display $slotname $default $header $before $after $footer $params)##
#initslot($slotname $params)##
#if ($sys.part.render)##
#if($sys.currentslot.slot)##
#__addAaSlotImg($slotname)##
#__startAaSlotDiv($slotname)##
#if($sys.currentslot.relresults.size() == 0)##
$default##
#end##
#if($sys.currentslot.relresults.size() > 0)##
$header##
#end##
#foreach($relresult in $sys.currentslot.relresults )##
$before##
#__startAaSnippetDiv($relresult $slotname)##
#__addAaSnippetImg($relresult $slotname)##
#set($body = "$rx.doc.extractBody($relresult)")##
$body##
#__endAaSnippetDiv()##
$after##
#end##
#if($sys.currentslot.relresults.size() > 0)##
$footer##
#end##
#__endAaSlotDiv()##
#end##
#end##
#endslot($slotname)##
#end



#macro(escfield $fieldname)##
$tools.esc.xml($sys.item.getProperty($fieldname).String)##
#end

#macro(cdatafield $fieldname)##
<![CDATA[$sys.item.getProperty($fieldname).String]]>##
#end

#macro(escapedcdatafield $fieldname)##
<![CDATA[$sys.item.getProperty($fieldname).String]]ENDCDATA##
#end

#macro(SnippetHeader)
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Snippet</title>
	<meta content="Percussion Rhythmyx" name="generator"/>
  </head>
  <body>
#end

#macro(SnippetFooter)
	  </body>
</html>
#end
	
#macro(CDE_PubXml_Slot $slotname $renderslotname $params)##
#initslot($slotname $params)##
#foreach($relresult in $sys.currentslot.relresults )##
#set($nciTemplate = "~/SnippetTemplates/GenericHtmlContentSnippet.ascx" )## 
#set($nciTemplate = $relresult.Bindings.get('$localTemplatePath') )##
#set($body = "$rx.doc.extractBody($relresult)")##
#set($contentID = $rx.guid.getContentId($relresult.Id))##
#set($displayVersions = ["Web","Print","PrintAll","ViewAll"])##
#CDE_PubXml_OutputSnippetInfo($renderslotname $nciTemplate $body $contentID $displayVersions)##
#end##
#endslot($slotname)##
#end

#macro(BodyData)
	#field("body")
#end

#macro(XmlLocalBody)
	#XmlSnippet("MainContentSlot" "/SnippetTemplates/GenericHtmlContentSnippet.ascx" "#BodyData()" )
#end





#macro(globaltype)
#if ( $tools.number.toNumber($tools.list.get($sys.params.get('sys_context'),0)) > 0  ) 
	#xmlglobal()
#else
	#htmlglobal()
#end
#end

#macro(setup_snippet)
#if ( $tools.number.toNumber($tools.list.get($sys.params.get('sys_context'),0)) > 0  ) 
	#xmlsnippet()
#else
	#htmlsnippet()
#end
#end


#macro(htmlsnippet)
<html>
	<head>Snippet Template</head>
	<body>#inner()</body>
</html>
#end

## Below are macros for publishing files to the NCI.CDE System

## Common elements for all PageAssemblyInfo xml files

#* Output an XML element.  If the value is empty/missing, output
#  an empty element *#
#macro(CDE_PubXml_OutputElement $elementName $elementValue)
#if($elementValue)
<$elementName>$elementValue</$elementName>
#else
<$elementName />
#end
#end


## For the ContentDates element
#macro(CDE_PubXml_OutputContentDates)##
<ContentDates>
	#if($sys.item.definition.name == "rx:genNewsletterArticle")
	#set($issueDate = $user.NCI_NewsletterNameFinder.getIssueDate($folderPath, 1))
	<FirstPublished>$issueDate.replaceAll(" ", "T")</FirstPublished> 
	#else
	<FirstPublished>#displaydatefieldalt("date_first_published" "yyyy-MM-dd'T'00:00:00" "1980-01-01T00:00:00")</FirstPublished> 
	#end
	<LastModified>#displaydatefieldalt("date_last_modified" "yyyy-MM-dd'T'00:00:00" "1980-01-01T00:00:00")</LastModified> 
	<LastReviewed>#displaydatefieldalt("date_last_reviewed" "yyyy-MM-dd'T'00:00:00" "1980-01-01T00:00:00")</LastReviewed> 
	<NextReview>#displaydatefieldalt("date_next_review" "yyyy-MM-dd'T'00:00:00" "2070-01-01T00:00:00")</NextReview>
	<DateDisplayMode>#CDE_PubXml_GetDateDisplayMode()</DateDisplayMode>
</ContentDates>
#end

##Allows for an alternate date if the field is empty
#macro(displaydatefieldalt $fieldname $fieldformat $default)##
#if($sys.item.getProperty($fieldname) && !$sys.item.getProperty($fieldname).isNull())##
$tools.date.format($fieldformat,$sys.item.getProperty($fieldname).Date)##
#else##
$default##
#end##
#end

#macro(CDE_PubXml_GetDateDisplayMode)##
#set($my_dateDisplay = 0)##
#foreach($val in $sys.item.getProperty("date_display_mode").Values)##
#set($my_dateDisplay = $my_dateDisplay + $val.Long)##
#end##
#if ( $my_dateDisplay == '1')##
Posted##
#elseif ( $my_dateDisplay == '2')##
Updated##
#elseif ( $my_dateDisplay == '3')##
PostedUpdated##
#elseif ( $my_dateDisplay == '4')##
Reviewed##
#elseif ( $my_dateDisplay == '5')##
PostedReviewed##
#elseif ( $my_dateDisplay == '6')##
UpdatedReviewed##
#elseif ( $my_dateDisplay == '7')##
All##
#else##
None##
#end##
#end

## Defines the path to the section details and the pretty url for the page.
## TODO: If the page is the "home page" for the section, it's $prettyPath
## might be empty, so there should be no trailing slash.
#macro(CDE_PubXml_OutputPaths)
##
## Retrieve the "filename" portion of the Pretty URL.
#set($pretty_url = $rx.location.generate($sys.assemblyItem))
	<PrettyUrl><![CDATA[$pretty_url]]></PrettyUrl> 
##  Render the section location via the nciLocationBuilder template
#if($pretty_url == "/")
	##Homepage, so path is /
	<SectionPath><![CDATA[/homepage]]></SectionPath>
#else
	#if(!$sys.item.hasProperty("rx:pretty_url_name"))
		<SectionPath><![CDATA[$pretty_url]]></SectionPath>
	#else
		#set($pretty_field = $sys.item.getProperty("rx:pretty_url_name").String)
		#if($pretty_field == "")
			<SectionPath><![CDATA[$pretty_url]]></SectionPath>
		#else
			<SectionPath><![CDATA[$user.CGV_AssemblyTools.getParentFromPath($pretty_url)]]></SectionPath>
		#end
	#end
#end
#end




## Outputs the PageMeta element
#macro(CDE_PubXml_OutputPageMeta $pageAltLang $mobileURLElement)
#set($browser_title = $sys.item.getProperty("rx:browser_title").String)
	<PageMetadata>
		<LongTitle>#escfield("long_title")</LongTitle> 
		<ShortTitle>#escfield("short_title")</ShortTitle>
		<ShortDescription>#cdatafield("short_description")</ShortDescription>
		<LongDescription>#cdatafield("long_description")</LongDescription>
		#if($browser_title == "")
			<BrowserTitle>#escfield("short_title")</BrowserTitle>
		#else
			<BrowserTitle>$tools.esc.xml($browser_title)</BrowserTitle>
		#end
		<MetaDescription>#escfield("meta_description")</MetaDescription> 
		<MetaKeywords>#escfield("meta_keywords")</MetaKeywords>
		<AltLanguageURL>$pageAltLang</AltLanguageURL>
		#if($mobileURLElement && $mobileURLElement != "")
			$mobileURLElement
		#end
	</PageMetadata>
#end

## Outputs information about the content item of the AssemblyInstruction
#macro(CDE_PubXml_OutputContentItemInfo)
	<ContentItemInfo>
		<ContentItemID>$sys.item.getProperty('rx:sys_contentid').String</ContentItemID>
		<ContentItemType>$sys.item.definition.name</ContentItemType>
	</ContentItemInfo>
#end##

## Outputs information about the content item of the AssemblyInstruction
#macro(CDE_PubXml_OutputSearchMetadata $siteSpecificSearchMetadata)
	<SearchMetadata>
		#if ($sys.item.hasProperty("rx:do_not_index") && ($sys.item.getProperty("rx:do_not_index").Boolean == true))##
		<DoNotIndex>true</DoNotIndex>
		#else##
		<DoNotIndex>false</DoNotIndex>
		#{end}##
		<SiteSpecificSearchMetadata>$siteSpecificSearchMetadata</SiteSpecificSearchMetadata>
	</SearchMetadata>
#end##


## Outputs a collection of Field elements using a map defined by $my_localFields
## these are local fields which can be published  to an Assembly Instruction and 
## used by markup extensions
#macro(CDE_PubXml_OutputLocalFields $my_localFields)
	<LocalFields>##
		#if($my_localFields)##
			#foreach($key in $my_localFields.keySet())##
				<Field Name="$key">$my_localFields.get($key)</Field>##
			#end##
		#end##
	</LocalFields>##
#end


## This is here for items like the body field or related pages
## where there is not a real ContentItem/Snippet associated with this content item,
## but a field or other kind of thing (like just a plain ol slot with some items, e.g.
## related pages which will probably be a slot that contains links and this would
## output those links.  No list content items littered around the system.)
## that will "pretend" to be a snippetinfo.  DisplayVersions sets for web, print, printall, viewall
##
#macro(CDE_PubXml_CreateTemplateSnippetInfos $slotName $templatePath $data $contentID $displayVersions)
#CDE_PubXml_OutputSnippetInfo($slotName $templatePath $data $contentID $displayVersions)
#end

##
## Outputs the SinglePageAssemblyInfo XML structure.
##
## Arguments:
##	$pageTemplateName - The name of the page template CDE should use
##						when rendering the page.
##
##	$templateSnippets - Pseudo snippets created in the individual template.
##						the contents of $templateSnippets must be generated via
##						the CDE_PubXml_CreateTemplateSnippetInfos macro.
##
##	$blockedSlotList - A list of slots which CDE should suppress.
##				The calling template should declare this list via
##				a statement similar to:
##					#set( $blockedSlots = ["slota", "slotb", "slotc"] )
##				An empty list would be declared as:
##					#set( $blockedSlots = [] )
##				
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en-us" (English) is used.
##
##	$localFields - A map containing additional local fields which may be used by
##		markup extensions. E.G. VolumeIssueNumber
##
#macro(CDE_PubXml_OutputSinglePageAssemblyInfo2 $pageTemplateName $templateSnippets $blockedSlotList $localFields $includedSlots)##
#set($socialMetadataOverrides = { })##
#CDE_PubXml_OutputSinglePageAssemblyInfo3($pageTemplateName $templateSnippets $blockedSlotList $localFields $includedSlots $socialMetadataOverrides)##
#end

##
## Outputs the SinglePageAssemblyInfo XML structure.
##
## Arguments:
##	$pageTemplateName - The name of the page template CDE should use
##						when rendering the page.
##
##	$templateSnippets - Pseudo snippets created in the individual template.
##						the contents of $templateSnippets must be generated via
##						the CDE_PubXml_CreateTemplateSnippetInfos macro.
##
##	$blockedSlotList - A list of slots which CDE should suppress.
##				The calling template should declare this list via
##				a statement similar to:
##					#set( $blockedSlots = ["slota", "slotb", "slotc"] )
##				An empty list would be declared as:
##					#set( $blockedSlots = [] )
##				
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en-us" (English) is used.
##
##	$localFields - A map containing additional local fields which may be used by
##		markup extensions. E.G. VolumeIssueNumber
##
##	$socialMetadataOverrides - A map containing overrides to the default values of social
##      metadata keys. E.G. { "IsCommentingAvailable" = true }
##
#macro(CDE_PubXml_OutputSinglePageAssemblyInfo3 $pageTemplateName $templateSnippets $blockedSlotList $localFields $includedSlots $socialMetadataOverrides)##
<?xml version="1.0" encoding="utf-8" ?>
<cde:SinglePageAssemblyInstruction xsi:schemaLocation="http://www.example.org/CDESchema CDESchema.xsd" xmlns:cde="http://www.example.org/CDESchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	#CDE_PubXml_OutputSearchMetadata('')##
	#CDE_PubXml_OutputContentItemInfo()##
	#CDE_PubXml_OutputElement("PageTemplateName" $pageTemplateName)##
	#CDE_PubXml_OutputPaths()##
	#CDE_PubXml_OutputContentDates()##
	#set( $translations = $user.psoSlotTools.getSlotContents($sys.assemblyItem,"cgvTranslationFinder", null))##
	#if ( $translations.size() > 0 && $user.CGV_AssemblyTools.isOnSite($rx.location.path($translations.get(0).getNode()), $sys.site.path) != "")##
	#set( $altLang = $rx.location.generate($translations.get(0)))##
	#else##
	#set( $altLang = "")##
	#end##
	#set($mobileUrl = "")##
	#set($desktopUrl = "")##
	#set($mobileSite = $sys.variables.rxs_mobileSite)##
	#set($desktopSite = $sys.variables.rxs_desktopSite)##
	#CDE_PubXml_MobileUrl($mobileUrl $desktopUrl $sys.assemblyItem $mobileSite $desktopSite)##
	#set($mobileURLElement = "")##
	#if($mobileUrl != "")##
		#set($mobileURLElement = $mobileUrl)##
	#elseif($desktopUrl != "")##
		#set($mobileURLElement = $desktopUrl)##
	#end##
	#CDE_PubXml_OutputPageMeta($altLang $mobileURLElement)##
	#CDE_PubXml_OutputLocalFields($localFields)##
	<Snippets>
		#if( $templateSnippets )##
			$templateSnippets##
		#end##
		##
		## We need to get the snippets for all slots out.  How can we find all of the Content Items that are
		## related to this content item through active assembly slots??  I.E. We should not have to hard code
		## the names of all the possible slots for this item.  Well, we would need some excluded names that 
		## have special meaning.
		#CDE_PubXml_AllSlots($includedSlots)
	</Snippets>
	#CDE_PubXml_OutputBlockedSlots($blockedSlotList)
	#CDE_PubXml_OutputLanguage()
	##IF CGV, DISPLAY: ELSE NOT
	#if($sys.site.path == "//Sites/CancerGov" || $sys.site.path == "//Sites/TCGA" || $sys.site.path == "//Sites/MobileCancerGov")
	#CDE_PubXml_OutputAlternateContentVersions()
	#else
	<AlternateContentVersions>##
		<IsShareBookmarkAvailable>false</IsShareBookmarkAvailable>##
		<IsPrintAvailable>false</IsPrintAvailable>##
		<IsEmailAvailable>false</IsEmailAvailable>##
		<IsMobileShareAvailable>false</IsMobileShareAvailable>##
		<IsPublicArchive>false</IsPublicArchive>
		<IsPublicUse>false</IsPublicUse>
		<Files>##
		</Files>##
	</AlternateContentVersions>##
	#end
	#CDE_PubXml_OutputSocialMetadata( $socialMetadataOverrides )
	##---------------
</cde:SinglePageAssemblyInstruction>
#end
	
#macro(CDE_PubXml_OutputSinglePageAssemblyInfo $pageTemplateName $templateSnippets $blockedSlotList $localFields)##
#set($includedSlots = "[]")##
#CDE_PubXml_OutputSinglePageAssemblyInfo2($pageTemplateName $templateSnippets $blockedSlotList $localFields $includedSlots)##
#end##

#macro(CDE_PubXml_OutputSinglePageAssemblyInfoMobile $pageTemplateName $templateSnippets $blockedSlotList $localFields)##
#set($includedSlots = ["cgvMobileBody", "cgvMobileFooter", "cgvMobileSiteBanner"])##
#CDE_PubXml_OutputSinglePageAssemblyInfo2($pageTemplateName $templateSnippets $blockedSlotList $localFields $includedSlots)##
#end##

##
## Outputs the MultiPageAssemblyInfo XML structure.
##
## Arguments:
##	$pageTemplateName - The name of the page template CDE should use
##						when rendering the page.
##
##	$templateSnippets - Pseudo snippets created in the individual template.
##						the contents of $templateSnippets must be generated via
##						the CDE_PubXml_CreateTemplateSnippetInfos macro.
##
##	$blockedSlotList - A list of slots which CDE should suppress.
##				The calling template should declare this list via
##				a statement similar to:
##					#set( $blockedSlots = ["slota", "slotb", "slotc"] )
##				An empty list would be declared as:
##					#set( $blockedSlots = [] )
##				
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en-us" (English) is used.
##
##	$localFields - A map containing additional local fields which may be used by
##		markup extensions. E.G. VolumeIssueNumber
##
#macro(CDE_PubXml_OutputMultiPageAssemblyInstruction2 $pageTemplateName $templateSnippets $blockedSlotList $localFields $pagesXML $includedSlots)##
#set($socialMetadataOverrides = { })##
#CDE_PubXml_OutputMultiPageAssemblyInstruction3($pageTemplateName $templateSnippets $blockedSlotList $localFields $pagesXML $includedSlots $socialMetadataOverrides)##
#end

##
## Outputs the MultiPageAssemblyInfo XML structure.
##
## Arguments:
##	$pageTemplateName - The name of the page template CDE should use
##						when rendering the page.
##
##	$templateSnippets - Pseudo snippets created in the individual template.
##						the contents of $templateSnippets must be generated via
##						the CDE_PubXml_CreateTemplateSnippetInfos macro.
##
##	$blockedSlotList - A list of slots which CDE should suppress.
##				The calling template should declare this list via
##				a statement similar to:
##					#set( $blockedSlots = ["slota", "slotb", "slotc"] )
##				An empty list would be declared as:
##					#set( $blockedSlots = [] )
##				
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en-us" (English) is used.
##
##	$localFields - A map containing additional local fields which may be used by
##		markup extensions. E.G. VolumeIssueNumber
##
##	$socialMetadataOverrides - A map containing overrides to the default values of social
##      metadata keys. E.G. { "IsCommentingAvailable" = true }
##
#macro(CDE_PubXml_OutputMultiPageAssemblyInstruction3 $pageTemplateName $templateSnippets $blockedSlotList $localFields $pagesXML $includedSlots $socialMetadataOverrides)##
<?xml version="1.0" encoding="utf-8" ?>
<cde:MultiPageAssemblyInstruction xsi:schemaLocation="http://www.example.org/CDESchema CDESchema.xsd" xmlns:cde="http://www.example.org/CDESchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	#CDE_PubXml_OutputSearchMetadata('')##
	#CDE_PubXml_OutputContentItemInfo()##
	#CDE_PubXml_OutputElement("PageTemplateName" $pageTemplateName)##
	#CDE_PubXml_OutputPaths()##
	#CDE_PubXml_OutputContentDates()##
	#set( $translations = $user.psoSlotTools.getSlotContents($sys.assemblyItem,"cgvTranslationFinder", null))##
	#if ( $translations.size() > 0 && $user.CGV_AssemblyTools.isOnSite($rx.location.path($translations.get(0).getNode()), $sys.site.path) != "")##
	#set( $altLang = $rx.location.generate($translations.get(0)))
	#else
	#set( $altLang = "")
	#end
	#set($mobileUrl = "")
	#set($desktopUrl = "")
	#set($mobileSite = $sys.variables.rxs_mobileSite)
	#set($desktopSite = $sys.variables.rxs_desktopSite)
	#CDE_PubXml_MobileUrl($mobileUrl $desktopUrl $sys.assemblyItem $mobileSite $desktopSite)##
	#set($mobileURLElement = "")
	#if($mobileUrl != "")
		#set($mobileURLElement = $mobileUrl)
	#elseif($desktopUrl != "")
		#set($mobileURLElement = $desktopUrl)
	#end
 	#CDE_PubXml_OutputPageMeta($altLang $mobileURLElement)##
	#CDE_PubXml_OutputLocalFields($localFields)##
	<Snippets>
		#if( $templateSnippets )##
			$templateSnippets##
		#end##
##
		## We need to get the snippets for all slots out.  How can we find all of the Content Items that are
		## related to this content item through active assembly slots??  I.E. We should not have to hard code
		## the names of all the possible slots for this item.  Well, we would need some excluded names that 
		## have special meaning.
		#CDE_PubXml_AllSlots($includedSlots)
	</Snippets>
	<Pages>
		$pagesXML
	</Pages>
	#CDE_PubXml_OutputBlockedSlots($blockedSlotList)
	#CDE_PubXml_OutputLanguage()
	#if($sys.site.path == "//Sites/CancerGov" || $sys.site.path == "//Sites/TCGA" || $sys.site.path == "//Sites/MobileCancerGov")
	#CDE_PubXml_OutputAlternateContentVersions()
		#else
<AlternateContentVersions>##
		<IsShareBookmarkAvailable>false</IsShareBookmarkAvailable>##
		<IsPrintAvailable>false</IsPrintAvailable>##
		<IsEmailAvailable>false</IsEmailAvailable>##
		<IsMobileShareAvailable>false</IsMobileShareAvailable>##
		<IsPublicArchive>false</IsPublicArchive>
		<IsPublicUse>false</IsPublicUse>
<Files>##
		</Files>##
		</AlternateContentVersions>##
	#end
    #CDE_PubXml_OutputSocialMetadata( $socialMetadataOverrides )
</cde:MultiPageAssemblyInstruction>
#end

#macro(CDE_PubXml_OutputMultiPageAssemblyInstruction $pageTemplateName $templateSnippets $blockedSlotList $localFields $pagesXML)##
#set($includedSlots = "[]")##
#CDE_PubXml_OutputMultiPageAssemblyInstruction2($pageTemplateName $templateSnippets $blockedSlotList $localFields $pagesXML $includedSlots)##
#end##

#macro(CDE_PubXml_OutputMultiPageAssemblyInstructionMobile $pageTemplateName $templateSnippets $blockedSlotList $localFields $pagesXML)##
#set ($includedSlots = ["cgvMobileBody", "cgvMobileFooter", "cgvMobileSiteBanner"])##
#CDE_PubXml_OutputMultiPageAssemblyInstruction2($pageTemplateName $templateSnippets $blockedSlotList $localFields $pagesXML $includedSlots)##
#end##


#macro(CDE_PubXml_OutputMultiPageAssemblyInstructionPage2 $pageTemplateName $templateSnippets $blockedSlotList $prettyURL $altLang $mobileURLElement $includedSlots)##
<Page>
	#CDE_PubXml_OutputElement("PageTemplateName" $pageTemplateName)##
	<PrettyUrl>$prettyURL</PrettyUrl>##
	#if(!$altLang)
 	#CDE_PubXml_OutputPageMeta("" $mobileURLElement)##
	#else
 	#CDE_PubXml_OutputPageMeta($altLang $mobileURLElement)##
	#end
	<Snippets>
		#if( $templateSnippets )##
			$templateSnippets##
		#end##
##
		## We need to get the snippets for all slots out.  How can we find all of the Content Items that are
		## related to this content item through active assembly slots??  I.E. We should not have to hard code
		## the names of all the possible slots for this item.  Well, we would need some excluded names that 
		## have special meaning.
		#CDE_PubXml_AllSlots($includedSlots)
	</Snippets>
	#CDE_PubXml_OutputBlockedSlots($blockedSlotList)
</Page>
#end

#macro(CDE_PubXml_OutputMultiPageAssemblyInstructionPage $pageTemplateName $templateSnippets $blockedSlotList $prettyURL $altLang $mobileURLElement)##
#set($includedSlots = "[]")##
#CDE_PubXml_OutputMultiPageAssemblyInstructionPage2($pageTemplateName $templateSnippets $blockedSlotList $prettyURL $altLang $mobileURLElement $includedSlots)##
#end##
#macro(CDE_PubXml_OutputMultiPageAssemblyInstructionPageMobile $pageTemplateName $templateSnippets $blockedSlotList $prettyURL $altLang $mobileURLElement)##
#set ($includedSlots = ["cgvMobileBody", "cgvMobileFooter", "cgvMobileSiteBanner"])##
#CDE_PubXml_OutputMultiPageAssemblyInstructionPage2($pageTemplateName $templateSnippets $blockedSlotList $prettyURL $altLang $mobileURLElement $includedSlots)##
#end##

##  Macro for faked page in multipage; same as multipage macro, except that the allslots call is removed
#macro(CDE_PubXml_OutputMultiPageAssemblyInstructionFakePage2 $pageTemplateName $templateSnippets $blockedSlotList $prettyURL $includedSlots)##
<Page>
	#CDE_PubXml_OutputElement("PageTemplateName" $pageTemplateName)##
	<PrettyUrl>$prettyURL</PrettyUrl>##
 	#CDE_PubXml_OutputPageMeta("" "")##
	<Snippets>
		#if( $templateSnippets )##
			$templateSnippets##
		#end##
##
		## We need to get the snippets for all slots out.  How can we find all of the Content Items that are
		## related to this content item through active assembly slots??  I.E. We should not have to hard code
		## the names of all the possible slots for this item.  Well, we would need some excluded names that 
		## have special meaning.		
	</Snippets>
	#CDE_PubXml_OutputBlockedSlots($blockedSlotList)
</Page>
#end##

#macro(CDE_PubXml_OutputMultiPageAssemblyInstructionFakePage $pageTemplateName $templateSnippets $blockedSlotList $prettyURL)##
	#CDE_PubXml_OutputMultiPageAssemblyInstructionFakePage2($pageTemplateName $templateSnippets $blockedSlotList $prettyURL [])##
#end##
#macro(CDE_PubXml_OutputMultiPageAssemblyInstructionFakePageMobile $pageTemplateName $templateSnippets $blockedSlotList $prettyURL)##
	#set ($includedSlots = ["cgvMobileBody", "cgvMobileFooter", "cgvMobileSiteBanner"])##
	#CDE_PubXml_OutputMultiPageAssemblyInstructionFakePage2($pageTemplateName $templateSnippets $blockedSlotList $prettyURL $includedSlots)##
#end##
##
## Outputs the SectionDetail XML structure.
##
## Arguments:
##	$templateSnippets - Pseudo snippets created in the individual template.
##						the contents of $templateSnippets must be generated via
##						the CDE_PubXml_CreateTemplateSnippetInfos macro.
##
##	$blockedSlotList - A list of slots which CDE should suppress.
##				The calling template should declare this list via
##				a statement similar to:
##					#set( $blockedSlots = ["slota", "slotb", "slotc"] )
##				An empty list would be declared as:
##					#set( $blockedSlots = [] )
##				
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en-us" (English) is used.
##




#macro(CDE_PubXml_OutputSectionDetail $templateSnippets $blockedSlotList )##
<?xml version="1.0" encoding="utf-8"?>
<cde:SectionDetail xmlns:cde="http://www.example.org/CDESchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.example.org/CDESchema CDESchema.xsd ">
	##This is wrong!
	##set($prettyUrlFolderName = $sys.item.getProperty("rx:pretty_url_folder_name").String )##
	#if($sys.item.getProperty('rx:sys_contenttypeid').Long == 314)## This is for a NavOn
	#CDE_PubXml_OutputElement("SectionName" $sys.item.getProperty('rx:sys_title').String)##
	#else##
	#CDE_PubXml_OutputElement("SectionName" "/")##
	#{end}##
	<Snippets>
		#if( $templateSnippets )##
			$templateSnippets##
		#end##
		## We need to get the snippets for all slots out.  How can we find all of the Content Items that are
		## related to this content item through active assembly slots??  I.E. We should not have to hard code
		## the names of all the possible slots for this item.  Well, we would need some excluded names that 
		## have special meaning.
		#CDE_PubXml_AllSlots("[]")
	</Snippets>
	#if($sys.item.getProperty('rx:sys_contenttypeid').Long == 314)## This is for a Navon
	<ParentPath>$user.CGV_AssemblyTools.getParentFromPath($rx.location.generate($sys.assemblyItem))</ParentPath>
	#{end}##
</cde:SectionDetail>
#end##

##
## Outputs the SectionDetail XML structure for the root navTree
##
## Arguments:
##	$templateSnippets - Pseudo snippets created in the individual template.
##						the contents of $templateSnippets must be generated via
##						the CDE_PubXml_CreateTemplateSnippetInfos macro.
##
##	$blockedSlotList - A list of slots which CDE should suppress.
##				The calling template should declare this list via
##				a statement similar to:
##					#set( $blockedSlots = ["slota", "slotb", "slotc"] )
##				An empty list would be declared as:
##					#set( $blockedSlots = [] )
##				
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en-us" (English) is used.
##
#macro(CDE_PubXml_OutputSectionDetailRoot $templateSnippets $blockedSlotList )##
<?xml version="1.0" encoding="utf-8"?>
<cde:SectionDetail xmlns:cde="http://www.example.org/CDESchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.example.org/CDESchema CDESchema.xsd ">

	##set($prettyUrlFolderName = $sys.item.getProperty("rx:pretty_url_folder_name").String )##
	##CDE_PubXml_OutputElement("SectionName" $prettyUrlFolderName)##
	#set($sys_title = $sys.item.getProperty("rx:sys_title").String )##
	#CDE_PubXml_OutputElement("SectionName" $sys_title)##
	<Snippets>
		#if( $templateSnippets )##
			$templateSnippets##
		#end##
		## We need to get the snippets for all slots out.  How can we find all of the Content Items that are
		## related to this content item through active assembly slots??  I.E. We should not have to hard code
		## the names of all the possible slots for this item.  Well, we would need some excluded names that 
		## have special meaning. 
		#CDE_PubXml_AllSlots("[]")
	</Snippets>
</cde:SectionDetail>
#end

#macro(CDE_PubXml_AllSlots $includedSlots)
#if ($includedSlots == "[]")##
#set($slotNames=$user.psoRelationships.getItemSlots($sys.assemblyItem.getId()))##
## These are slots we know should be ignored.
#set($ignoreSlotNames = ["inline","rffNavImage","rffHomeImage","rffNavLandingPage","rffNavSubmenu","nciFile","cgvCitationSl","cgvTopicSearch","cgvBookletPageSl","cgvPowerPointPageSl","cgvCancerBulletinPageSl","pdqCancerInformationSummaryPageSlot","pdqCancerInformationSummaryMobilePageSlot","pdqCancerInformationSummaryHealthProf","pdqCancerInformationSummaryPatient","pdqCancerInformationSummaryRef", "tcgaSlotMultimedia", "tcgaSlotImageCaption", "genSlotSectionNav", "genSlotMainNav", "genSlotFeatureImage", "genSlotBodyBottom"])##
#foreach($slot in $slotNames)##
#set($renderSlotRegEx = "^[^_]*_([^_]*)_?.*")##
#set($renderSlotName = $slot.replaceAll($renderSlotRegEx,"$1"))##
#if( !$ignoreSlotNames.contains($renderSlotName) )##	
#CDE_PubXml_Slot($slot $renderSlotName "" )##
#end##
#end##
#else##
#foreach($slot in $includedSlots)##
#set($renderSlotRegEx = "^[^_]*_([^_]*)_?.*")##
#set($renderSlotName = $slot.replaceAll($renderSlotRegEx,"$1"))##
#CDE_PubXml_Slot($slot $renderSlotName "" )##
#end##
#end##
#end##


#macro(CDE_PubXml_OutputSnippetInfo $slotName $templatePath $data $contentItemID $displayVersions)##
	<SnippetInfo>
		<SnippetTemplatePath>$templatePath</SnippetTemplatePath> 
		<SlotName>$slotName</SlotName>
        <OnlyDisplayFor>
        #foreach($displayVersion in $displayVersions)##
        <DisplayVersion>$displayVersion</DisplayVersion>
        #end##
		</OnlyDisplayFor>
		<Data><![CDATA[$data]]></Data>
		#CDE_PubXml_OutputElement("ContentID" $contentItemID)
	</SnippetInfo>
#end

##Outputs a CDR Definition

#macro(CDE_PubXml_OutputDefinitionSnippetInfo $slotName $templatePath $data $contentItemID $displayVersions $cdrDefinitionID $cdrDefinitionTitle)##
	<SnippetInfo>
		<SnippetTemplatePath>$templatePath</SnippetTemplatePath> 
		<SlotName>$slotName</SlotName>
        <OnlyDisplayFor>
        #foreach($displayVersion in $displayVersions)##
        <DisplayVersion>$displayVersion</DisplayVersion>
        #end##
		</OnlyDisplayFor>
        <CDRId>$cdrDefinitionID</CDRId>
		<Data><![CDATA[$data]]></Data>
        <CDRDefinitionName>$cdrDefinitionTitle</CDRDefinitionName>
		#CDE_PubXml_OutputElement("ContentID" $contentItemID)








	</SnippetInfo>
#end

##
##  Outputs the list of slots which CDE should suppress.
##
#macro(CDE_PubXml_OutputBlockedSlots $blockedSlotList)##
	<BlockedSlots>
		#foreach($name in $blockedSlotList)
			<Slot Name="$name" />
		#end
	</BlockedSlots>
#end
##
##  Outputs the ISO 639-1 language code based on the sys_lang field.  
##If this value is empty
##		a default value of "en-us" (English) is used.
#macro(CDE_PubXml_OutputLanguage)
	#set ($my_lang = $sys.item.getProperty("rx:sys_lang").String)##	
	#CDE_PubXml_OutputElement("Language" $my_lang.substring(0,2))##	
#end

##
##  Outputs the alternate content versions.
##
#macro(CDE_PubXml_OutputAlternateContentVersions)
#set ($IsBookMarkShare = ($sys.item.getProperty("rx:share_available")))
<AlternateContentVersions>
<IsShareBookmarkAvailable>##
#if ($IsBookMarkShare.Boolean == true)##
true##
#else##
false##
#end##
</IsShareBookmarkAvailable>
<IsPrintAvailable>##
#if ($sys.item.getProperty("rx:print_available").Boolean == true )##
true##
#else##
false##
#end##
</IsPrintAvailable>
<IsEmailAvailable>##
#if ($sys.item.getProperty("rx:email_available").Boolean == true)##
true##
#else##
false##
#end##
</IsEmailAvailable>
<IsMobileShareAvailable>##
#if($sys.item.hasProperty("rx:mobile_share_available"))
#if ($sys.item.getProperty("rx:mobile_share_available").Boolean == true)##
true##
#else##
false##
#end##
#else##
false##
#end##
</IsMobileShareAvailable>
<IsPublicArchive>##
#if($sys.item.hasProperty("rx:public_archive"))
#if ($sys.item.getProperty("rx:public_archive").Boolean == true)##
true##
#else##
false##
#end##
#else##
false##
#end##
</IsPublicArchive>
<IsPublicUse>##
#if($sys.item.hasProperty("rx:public_use"))
#if ($sys.item.getProperty("rx:public_use").Boolean == true)##
true##
#else##
false##
#end##
#else##
false##
#end##
</IsPublicUse>
<Files>
#slot("nciFile" "" "" "" "" "template=cgvSnFileXML")
</Files>
#if ($sys.item.hasProperty("rx:publication_locator"))##
<OrderCopyURL>
$sys.item.getProperty("rx:publication_locator").String##
</OrderCopyURL>
#end##
</AlternateContentVersions>
#end

##
##  Outputs the alternate content versions.
##
#macro(CDE_PubXml_OutputSocialMetadata $socialMetadataOverrides)
#set ($IsCommentingAvailable = ($socialMetadataOverrides.IsCommentingAvailable))
<SocialMetadata>
<IsCommentingAvailable>##
#if ($IsCommentingAvailable == true)##
true##
#else##
false##
#end##
</IsCommentingAvailable>
</SocialMetadata>
#end

##
##  Retrieves the content item's ID value.
##  This macro only works with Content Items, it does *NOT* work
##  slots or other structures. 
##
## Arguments:
##	$contentItem - 
##  
#macro(Get_Content_Item_ID $contentItem)
$contentItem.item.getProperty("rx:sys_contentid").String##
#end

##HTML 508 TCZ Language Tab
#macro(CGOV_Html_508_TCZ_lang_tab)##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_508_tab_text = "Las personas que usan teclado para navegar pueden presionar la tecla entrar, intro o enter, para ver las notas destacadas de cada sección.")##
#else
#set($my_508_tab_text = "For keyboard users, please hit enter to view the featured news")##
#end##
$my_508_tab_text
#end

##HTML Helper Macros
#macro(CGOV_Html_DisplayBackToTop)##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_backtotoptext = "Volver arriba")##
#else
#set($my_backtotoptext = "Back to Top")##
#end##
#if ($sys.item.getDefinition().getDefaultPrimaryType().getAllJSR170Properties().contains('rx:backtotop'))
#if ($sys.item.getProperty("rx:backtotop").Boolean == true)## 
<p><a class="backtotop-link" href="#top"><img border="0" alt="$my_backtotoptext" src="http://www.cancer.gov/images/backtotop_red.gif" />$my_backtotoptext</a></p>##
#end
#end
#end


#*
	CGOV_Html_Show_Title
	
	Renders the contents of the long_title field as a page title based on
	whether the showpagetitle checkbox is selected.  If the showpagetitle
	field is missing, the title will be displayed. (This allows the including
	the ability to make the title optional to itself be optional.) 
*#
#macro(CGOV_Html_Show_Title)##
#if ($sys.item.hasProperty('rx:press_release_type'))
#set($release_type = $sys.item.getProperty("rx:press_release_type").String.trim())##
#if ($release_type && $release_type != '')
<div class="news-type">$release_type</div>##
#end##
#end##
#if ($sys.item.getDefinition().getDefaultPrimaryType().getAllJSR170Properties().contains('rx:showpagetitle'))
#if ($sys.item.getProperty("rx:showpagetitle").Boolean == true)## 
<h1>#field("long_title")</h1>##
#if ($sys.item.hasProperty('rx:subheader'))
#set($subheader = $sys.item.getProperty("rx:subheader").String.trim())##
#if ($subheader && $subheader != '')
<h2 class="news-subheader">$subheader</h2>##
#end##
#end##
## if show title is unchecked print a hidden page title
#else
<h1 class="hidden">#field("long_title")</h1>##
#end##	
#else
## if there's no show title option on the content, print the title
<h1>#field("long_title")</h1>##
#end
#end

#*
	CGOV_Convert_Month_Es
	
	Utility to convert numeric month to spanish month string
*#
#macro(CGOV_Convert_Month_Es $month)##
\#if($month == '01') enero
\#elseif($month == '02') febrero
\#elseif($month == '03') marzo
\#elseif($month == '04') abril
\#elseif($month == '05') mayo
\#elseif($month == '06') junio
\#elseif($month == '07') julio
\#elseif($month == '08') agosto
\#elseif($month == '09') septiembre
\#elseif($month == '10') octubre
\#elseif($month == '11') noviembre
\#elseif($month == '12') diciembre
\#end
#end

#*
	CGOV_Html_Date_Format
	
	Utility macro to render the date. If English, use MM/dd/yyyy,
	if Spanish, becomes "dd de month de year" i.e. 24 de enero de 2011.
*#
#macro(CGOV_Html_Date_Format $fieldName)##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "en-us")##
#datefield($fieldName "MM/dd/yyyy")
#elseif($my_locale == "es-us")##
$tools.date.getDay($sys.item.getProperty($fieldName).Date) de##
#set($month = $tools.date.getMonth($sys.item.getProperty($fieldName).Date))##
#if($month == 0) enero
#elseif($month == 1) febrero
#elseif($month == 2) marzo
#elseif($month == 3) abril
#elseif($month == 4) mayo
#elseif($month == 5) junio
#elseif($month == 6) julio
#elseif($month == 7) agosto
#elseif($month == 8) septiembre
#elseif($month == 9) octubre
#elseif($month == 10) noviembre
#elseif($month == 11) diciembre
#end
de $tools.date.getYear($sys.item.getProperty($fieldName).Date)
#end
#end

#*
	CGOV_Html_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(CGOV_Html_Date_Display)##
##
##Calls two macros for HTML Date Display
##
#Output_Language_Tabs()
#Output_Dates()
##
#end

##Output_Dates macro call
##
#macro(Output_Dates)##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#set($my_updated = "Actualizaci&oacute;n:")##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#set($my_updated = "Updated:")##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_posted</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_updated</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_reviewed</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##


##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##


<div class="document-dates">
#if ( $dateDisplay != '0')
<ul>
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
${updateDisplay}
${reviewDisplay}
#end
</ul>
#end
</div>
#end

#macro(Output_Language_Tabs)##
##
##outputs the language tabs Html for a page
##
<div class="version-language">
#slot("cgvLanguageTabs" "" "" "" "" "template=cgvSnLanguageTabs")
</div>
##
##
#end




#macro(CGOV_Mobile_PDQ_Html_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#set($my_updated = "Actualizado:")##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#set($my_updated = "Last Modified:")##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_posted #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_updated #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_reviewed #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##


##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##

<div class="document-dates">
#if ( $dateDisplay != '0')
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
<br />
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
<br />
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
<br />
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
<br />
${updateDisplay}
<br />
${reviewDisplay}
#end
#end
</div>
#end

#*
	CGOV_Mobile_Html_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(CGOV_Mobile_Html_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#set($my_updated = "Actualizaci&oacute;n:")##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#set($my_updated = "Updated:")##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_posted #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_updated #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_reviewed #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##


##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##

<div class="document-dates">
#if ( $dateDisplay != '0')
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
<br />
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
<br />
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
<br />
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
<br />
${updateDisplay}
<br />
${reviewDisplay}
#end
#end
</div>
#end


#*
	CGOV_Simple_Html_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates with no translation tab 
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(CGOV_Simple_Html_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#if($parentContentType == "rx:cgvCancerTypePortalGeneralPage" || $parentContentType == "rx:cgvCancerTypePortalHome" || $parentContentType == "rx:cgvCancerTypePortalListPage")
#set($my_updated = "Actualizado:")##
#else
#set($my_updated = "Actualizaci&oacute;n:")##
#end##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#if($parentContentType == "rx:cgvCancerTypePortalGeneralPage" || $parentContentType == "rx:cgvCancerTypePortalHome" || $parentContentType == "rx:cgvCancerTypePortalListPage")
#set($my_updated = "Last Modified:")##
#else
#set($my_updated = "Updated:")##
#end##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_posted</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_updated</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_reviewed</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##

##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##
<div class="document-dates">
#if ( $dateDisplay != '0')
<ul>
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
${updateDisplay}
${reviewDisplay}
#end
</ul>
#end
</div>
#end


#*
	CGOV_Print_Html_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(CGOV_Print_Html_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#if($parentContentType == "rx:cgvCancerTypePortalGeneralPage" || $parentContentType == "rx:cgvCancerTypePortalHome" || $parentContentType == "rx:cgvCancerTypePortalListPage")
#set($my_updated = "Actualizado:")##
#else
#set($my_updated = "Actualizaci&oacute;n:")##
#end##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#if($parentContentType == "rx:cgvCancerTypePortalGeneralPage" || $parentContentType == "rx:cgvCancerTypePortalHome" || $parentContentType == "rx:cgvCancerTypePortalListPage")
#set($my_updated = "Last Modified:")##
#else
#set($my_updated = "Updated:")##
#end##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_posted</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_updated</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_reviewed</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##

##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##
<div class="version-language">
#slot("cgvLanguageTabs" "" "" "" "" "template=cgvSnLanguageTabs")
</div>
<div class="document-dates">
#if ( $dateDisplay != '0')
<ul>
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
${updateDisplay}
${reviewDisplay}
#end
</ul>
#end
</div>
#end

#*
	CGOV_Html_Simple_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates (without any table container)
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(CGOV_Html_Simple_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#set($my_updated = "Actualizaci&oacute;n:")##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#set($my_updated = "Updated:")##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_posted</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_updated</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_reviewed</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##
<div class="document-dates">
#if ( $dateDisplay != '0')
<ul>
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
${updateDisplay}
${reviewDisplay}
#end
</ul>
#end
</div>
#end



#*
	CGOV_Html_Link_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates (without any table container)
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(CGOV_Html_Link_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#set($my_updated = "Actualizaci&oacute;n:")##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#set($my_updated = "Updated:")##
#set($my_reviewed = "Reviewed:")##
#end##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_posted #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_updated #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
$my_reviewed #CGOV_Html_Date_Format($fieldName)##
#end
#{end}##
##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##
##
#if ( $dateDisplay == '1')##
(${postedDisplay})&nbsp;-&nbsp;##
#elseif ( $dateDisplay == '2')##
(${updateDisplay})&nbsp;-&nbsp;##
#elseif ( $dateDisplay == '3')##
(${postedDisplay}, ${updateDisplay})&nbsp;-&nbsp;##
#elseif ( $dateDisplay == '4')##
(${reviewDisplay})&nbsp;-&nbsp;##
#elseif ( $dateDisplay == '5')##
(${postedDisplay}, ${reviewDisplay})&nbsp;-&nbsp;##
#elseif ( $dateDisplay == '6')##
(${updateDisplay}, ${reviewDisplay})&nbsp;-&nbsp;##
#elseif ( $dateDisplay == '7')##
(${postedDisplay}, ${updateDisplay}, ${reviewDisplay})&nbsp;-&nbsp;##
#end##
##
#end


#*
	CGOV_Html_PDQ_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates (without any table container)
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date
		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(CGOV_Html_PDQ_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_posted = "Publicaci&oacute;n:")##
#set($my_updated = "Actualizado:")##
#set($my_reviewed = "Revisi&oacute;n:")##
#else
#set($my_posted = "Posted:")##
#set($my_updated = "Last Modified:")##
#set($my_reviewed = "Reviewed:")##
#end##
##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_posted</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_updated</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
<li><strong>$my_reviewed</strong> #CGOV_Html_Date_Format($fieldName)</li>##
#end
#{end}##
##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##
##end##
#if ( $dateDisplay != '0')
<ul>
#if ( $dateDisplay == '1')
${postedDisplay}
#elseif ( $dateDisplay == '2')
${updateDisplay}
#elseif ( $dateDisplay == '3')
${postedDisplay}
${updateDisplay}
#elseif ( $dateDisplay == '4')
${reviewDisplay}
#elseif ( $dateDisplay == '5')
${postedDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '6')
${updateDisplay}
${reviewDisplay}
#elseif ( $dateDisplay == '7')
${postedDisplay}
${updateDisplay}
${reviewDisplay}
#end
</ul>
#end
#end

#macro(CGOV_Html_Display_MPNav $my_isPublishing $my_bookletUrl $my_selected_pagenum $my_page_titles)

#set($my_count = 1)##
##
<!-- Begin MP Nav -->##
<table cellspacing="0" cellpadding="0" border="0" width="178">##
<tbody>##
<tr>##
<td align="left" valign="top">##
<table width="159" cellspacing="0" cellpadding="0" border="0">##
<tbody>##
##
##
	#foreach($my_page in $my_page_titles)
		##Set URL for the current page
		#if($my_isPublishing)
			#set ($my_url = $my_bookletUrl + '/page' + $my_count)
		#else
			#set ($my_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_count"))##
		#end

		
    	<tr bgcolor="#ffffff">
          <td valign="top"><img height="1" border="0" width="5" alt="" src="$rxs_imageBase/spacer.gif" /></td>
          <td width="149" valign="top">
    		<table cellspacing="0" cellpadding="0" border="0" width="149">
    			<tbody><tr>
    				<td valign="top"><img height="4" border="0" width="5" alt="" src="$rxs_imageBase/spacer.gif" /><br/></td>
    				<td valign="top"><img height="1" border="0" width="5" alt="" src="$rxs_imageBase/spacer.gif" /><br/></td>
    				<td valign="top"><img height="1" border="0" width="139" alt="" src="$rxs_imageBase/spacer.gif" /><br/></td>
    			</tr>

				#if($my_selected_pagenum == $my_count)
					#CGOV_Html_Display_MPNavItem_On ($my_page)
				#else
					#CGOV_Html_Display_MPNavItem_Off ($my_page $my_url)
				#end
				
    			<tr>
    				<td valign="top"><img height="4" border="0" width="5" alt="" src="$rxs_imageBase/spacer.gif"/><br/></td>
    				<td valign="top"><img height="1" border="0" width="5" alt="" src="$rxs_imageBase/spacer.gif"/><br/></td>
    				<td valign="top"><img height="1" border="0" width="139" alt="" src="$rxs_imageBase/spacer.gif"/><br/></td>
    			</tr>
    		</tbody></table>
          </td>
          <td valign="middle"><img height="8" border="0" width="5" alt="" src="$rxs_imageBase/spacer.gif"/></td>
       </tr>	

	   #CGOV_Html_Display_MPNav_Separator()

	   #set($my_count = $my_count + 1)		
	#end
##
</tbody>##
</table>##
</td>##
</tr>##
</tbody>##
</table>##
<!-- End MP Nav -->##
#end

#macro(CGOV_Html_Display_MPNavItem_On $my_title)
	<tr>
		<td valign="top"><img height="10" border="0" width="5" alt="" src="$rxs_imageBase/arrow_red.gif"/></td>
		<td valign="top"><img height="1" border="0" width="5" alt="" src="$rxs_imageBase/spacer.gif"/><br/></td>
		<td valign="top"><span class="navigation-selected">$my_title</span><br/></td>
	</tr>
#end

#macro(CGOV_Html_Display_MPNavItem_Off $my_title $my_url)
	<tr>
		<td valign="top" colspan="3"><a class="navigation-dark-gray-link" href="$my_url">$my_title</a><br/></td>
	</tr>
#end

#macro(CGOV_Html_Display_MPNav_Separator)
<tr>
	<td bgcolor="#bbbbbb" valign="top" colspan="3"><img height="1" border="0" width="164" alt="" src="$rxs_imageBase/images/spacer.gif"/></td>
</tr>	
#end

#macro(CGOV_Html_Display_MPBoxedNav $my_isPublishing $my_bookletUrl $my_selected_pagenum $my_page_titles $my_booklet_title)
##
#set($my_count = 1)##
##
<!-- Begin MP Nav -->##
<div class="leftnav-shaded-box">##
##
##
	#foreach($my_page in $my_page_titles)
		##Set URL for the current page
        #if($my_count==1)
        <h1><a href="$my_bookletUrl">$my_booklet_title</a></h1>
        #end##
		#if($my_isPublishing)
			#set ($my_url = $my_bookletUrl + '/page' + $my_count)
		#else
			#set ($my_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_count"))##
		#end		
    	<ul class="leftnav-shaded-box">
				#if($my_selected_pagenum == $my_count)
					<li class="leftnav-on">$my_page</li>
				#else
					<li><a href="$my_url">$my_page</a></li>
				#end				
    			</ul>
	   #set($my_count = $my_count + 1)		
	#end
##
</div>##
<!-- End MP Nav -->##
#end


#macro(CGOV_Html_MPBodyNav $my_isPublishing $my_bookletUrl $my_selected_pagenum $my_num_pages)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#set ($my_next_page_index = $my_selected_pagenum + 1)##
#set ($my_prev_page_index = $my_selected_pagenum - 1)##
#if($my_isPublishing)
	#set ($my_prev_page_url = $my_bookletUrl + '/page' + $my_prev_page_index)
	#set ($my_next_page_url = $my_bookletUrl + '/page' + $my_next_page_index)
#else
	#set ($my_prev_page_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_prev_page_index"))##
	#set ($my_next_page_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_next_page_index"))##
#end
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_next = "Siguiente secci&oacute;n &gt;")##
#set($my_previous = "&lt; Secci&oacute;n anterior")##
#else
#set($my_next = "Next Section &gt;")##
#set($my_previous = "&lt; Previous Section")##
#end##
<p>##
#if ($my_selected_pagenum == 1 && $my_selected_pagenum < $my_num_pages)##
<a href="$my_next_page_url">$my_next</a>##
#end##
##
#if ($my_selected_pagenum != 1 && $my_num_pages > 1)##
<a href="$my_prev_page_url">$my_previous</a>##
#if ($my_selected_pagenum < $my_num_pages)
&nbsp;&nbsp;<span class="navigation-gray">|</span>&nbsp;&nbsp;<a href="$my_next_page_url">$my_next</a>##
#end##
#end##
</p>
#end


##Bottom Navigation for PowerPoint Pages
#macro(CGOV_Html_PPTBottomNav $my_isPublishing $my_bookletUrl $my_selected_pagenum $my_num_pages)
##
#set ($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#set ($my_next_page_index = $my_selected_pagenum + 1)##
#set ($my_prev_page_index = $my_selected_pagenum - 1)##
#if($my_isPublishing)
	#set ($my_prev_page_url = $my_bookletUrl + '/page' + $my_prev_page_index)
	#set ($my_next_page_url = $my_bookletUrl + '/page' + $my_next_page_index)
#else
	#set ($my_prev_page_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_prev_page_index"))##
	#set ($my_next_page_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_next_page_index"))##
#end
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##

#if($my_locale == "es-us")##
#set($my_next = "Siguiente Diapositiva &gt;")##
#set($my_previous = "&lt; Anterior ")##
#set($my_index = "&Iacute;ndice ")##
#else
#set($my_next = "Next Section &gt;")##
#set($my_previous = "&lt; Previous Section")##
#set($my_index = "Index")##
#end##
<p>##
#if ($my_selected_pagenum == 1 && $my_selected_pagenum < $my_num_pages)##
<a href="$parentlink">$my_index</a>&nbsp;&nbsp;<span class="navigation-gray">|&nbsp;&nbsp;</span><a href="$my_next_page_url">$my_next</a>##
#end##
##
#if ($my_selected_pagenum != 1 && $my_num_pages > 1)##
<a href="$my_prev_page_url">$my_previous</a>&nbsp;&nbsp;<span class="navigation-gray">|</span>&nbsp;&nbsp;##
<a href="$parentlink">$my_index</a>##
#if ($my_selected_pagenum < $my_num_pages)
&nbsp;&nbsp;<span class="navigation-gray">|</span>&nbsp;&nbsp;<a href="$my_next_page_url">$my_next</a>##
#end##
#end##
</p>
#end


##Right Navigation for PowerPoint Pages
#macro(CGOV_Html_PPTRightNav $my_isPublishing $my_bookletUrl $my_selected_pagenum $my_num_pages)
##
#set ($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_next = "Siguiente Diapositiva")##
#set($my_previous = "Anterior")##
#else
#set($my_next = "Next Section &gt;")##
#set($my_previous = "&lt; Previous Section")##
#end##
#set ($my_next_page_index = $my_selected_pagenum + 1)##
#set ($my_prev_page_index = $my_selected_pagenum - 1)##
#if($my_isPublishing)
	#set ($my_prev_page_url = $my_bookletUrl + '/page' + $my_prev_page_index)
	#set ($my_next_page_url = $my_bookletUrl + '/page' + $my_next_page_index)
#else
	#set ($my_prev_page_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_prev_page_index"))##
	#set ($my_next_page_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_next_page_index"))##
#end
##
#if ($my_selected_pagenum == 1 && $my_selected_pagenum < $my_num_pages)##
<a href="$my_next_page_url"><img border="0" alt="$my_next" src="$rxs_imageBase/UC-rightarrow.gif" /></a>##
#end##
##
#if ($my_selected_pagenum != 1 && $my_num_pages > 1)##
<a href="$my_prev_page_url"><img border="0" alt="$my_previous" src="$rxs_imageBase/UC-leftarrow.gif" /></a>##
#if ($my_selected_pagenum < $my_num_pages)
<a href="$my_next_page_url"><img border="0" alt="$my_next" src="$rxs_imageBase/UC-rightarrow.gif" /></a>##
#end##
#end##
#end

## PPT Index Macro
#macro(CGOV_Html_Display_PPTIndex $my_isPublishing $my_bookletUrl $bookletShortTitle $my_page_titles $my_num_pages)
#set ($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_slide_number_title = "N&uacute;mero de Diapositiva y T&iacute;tulo")##
#else
#set($my_slide_number_title = "Slide Number and Title")##
#end##
#set($my_count = 1)##
#set ($half_my_num_pages = ($my_num_pages/2))##
#if (($my_num_pages%2) != 0)##
#set ($half_my_num_pages = ($half_my_num_pages + 1))##
#end
##
##Begin Index Nav
<h1>$bookletShortTitle</h1>##
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong>$my_slide_number_title</strong><br />##
<table cellspacing="0" cellpadding="0">##
<tbody>##
<tr>##
<td valign="top">##
<ol>
##
##
#foreach($my_page in $my_page_titles)
		##Set URL for the current page
		#if($my_isPublishing)
			#set ($my_url = $my_bookletUrl + '/page' + $my_count)
		#else
			#set ($my_url = $rx.link.addParams($my_bookletUrl,"bookletpage","$my_count"))##
		#end
		#if ($my_count < $half_my_num_pages)
        <li><a href="$my_url">$my_page</a></li>##
		##
        #elseif ($my_count == $half_my_num_pages)##
        <li><a href="$my_url">$my_page</a></li>##
        </ol>##</td>##
        ##
        #elseif ($my_count > $half_my_num_pages)##
        #if ($my_count == ($half_my_num_pages+1))##
        </td>##
        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>##
        <td valign="top">##
        <ol start="$my_count">##
        #end##
        <li><a href="$my_url">$my_page</a></li>##
        #end         
	   #set($my_count = $my_count + 1)		
	#end
##
</ol>##	
</td>##
</tr>##
</tbody>##
</table>##
## End IndexNav ##
#end

## Booklet Print Table of Contents
#macro(CGOV_Print_Booklet_Table_of_Contents)
#set($my_count = 0)##
#foreach($my_page in $pages)
		##Set URL for the current page
		#set ($my_count_plus_one = $my_count + 1)
		#set ($my_url = '#' + $my_count_plus_one)##   
		#set ($my_title = $my_page.node.getProperty("rx:long_title").String)
        <a href="$my_url">$my_title</a>##
#set ($my_toc = $my_page.node.getProperty("rx:table_of_contents").String)
		#if ($my_toc)
  <table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td><img width="10" height="1" border="0" alt="" src="/images/spacer.gif" /></td>
<td>$my_toc</td></tr></tbody></table>
        #end
        <br />         
	   #set($my_count = $my_count + 1)##		
	#end
##
#end

##Mobile Cancer Type Definition
#macro(Mobile_CGOV_CDRDefinition)
#set($mobile_cdr_definition_slot = "cgvCDRDefinitionSl")
#initslot($mobile_cdr_definition_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
#slot($mobile_cdr_definition_slot "" "" "" "" "template=cgvSnCDRDefinition")##
#end##
#endslot($mobile_cdr_definition_slot)##
#end##


##Mobile Cancer Type More Information Section
#macro(Mobile_CGOV_More_Info_Pages)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_related_pages_title = "Más información")##
#else
#set($my_related_pages_title = "More Information")##
#end##
#set($mobile_more_info_pages_slot = "cgvMobileCTMoreInfoSl")
#initslot($mobile_more_info_pages_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div data-role="collapsible" data-collapsed="true" data-iconpos="right" id="section_moreInfo">
<h2 class="section_heading">$my_related_pages_title</h2>##	
#slot($mobile_more_info_pages_slot "" "<p>" "</p>" "" "")##
</div>
#end##
#endslot($mobile_more_info_pages_slot)##
#end##

##Mobile Related Pages Section
#macro(Mobile_CGOV_Related_Pages_LP)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_related_pages_title = "Páginas relacionadas")##
#else
#set($my_related_pages_title = "Related Pages")##
#end##
#set($mobile_more_info_pages_slot = "cgvSameSiteRelatedPages")
#initslot($mobile_more_info_pages_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div data-role="collapsible" data-content-theme="c" data-collapsed="true" data-iconpos="right" id="section_moreInfo" class="relatedPagesSection">
<h2 class="section_heading">$my_related_pages_title</h2>##	
#slot($mobile_more_info_pages_slot "" "<p>" "</p>" "" "")##
</div>
#end##
#endslot($mobile_more_info_pages_slot)##
#end##


##Mobile Cancer Type Treatment List
#macro(Mobile_CGOV_Treatment_Pages)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_related_pages_title = "Diagnóstico y tratamiento")##
#else
#set($my_related_pages_title = "Diagnosis and Treatment")##
#end##
#set($mobile_ct_treatment_pages_slot = "cgvMobileCTTrtmntListSl")
#initslot($mobile_ct_treatment_pages_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div data-role="collapsible" data-collapsed="true" data-iconpos="right" id="section_treatment">
<h2 class="section_heading">$my_related_pages_title</h2>##	
#slot($mobile_ct_treatment_pages_slot "" "<p>" "</p>" "" "")##
</div>
#end##
#endslot($mobile_ct_treatment_pages_slot)##
#end##

##Mobile Cancer Prevention And Screening List
#macro(Mobile_CGOV_PreventionAndScreening_Pages)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_prevention_pages_title = "Prevención y exámenes de detección")##
#else
#set($my_prevention_pages_title = "Prevention and Screening")##
#end##
#set($mobile_ct_prevention_pages_slot = "cgvMobileCTPrvntionListSl")
#initslot($mobile_ct_prevention_pages_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div data-role="collapsible" data-collapsed="true" data-iconpos="right" id="section_prevention">
<h2 class="section_heading">$my_prevention_pages_title</h2>##	
#slot($mobile_ct_prevention_pages_slot "" "<p>" "</p>" "" "")##
</div>
#end##
#endslot($mobile_ct_prevention_pages_slot)##
#end##

##Mobile Related Pages Box
#macro(Mobile_CGOV_Related_Pages)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_related_pages_title = "P&aacute;ginas relacionadas")##
#else
#set($my_related_pages_title = "Related Pages")##
#end##
#set($related_pages_slot = "cgvSameSiteRelatedPages")
#initslot($related_pages_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div class="related-resources">##
<h3>$my_related_pages_title</h3>##
<ul>##		
#slot($related_pages_slot "" "" "" "" "template=cgvSnResFactSheet_RelatedPage")##
</ul>##
</div>##
#end##
#endslot($related_pages_slot)##
#end##


##Related Pages Box
#macro(CGOV_Related_Pages)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_related_pages_title = "P&aacute;ginas relacionadas")##
#else
#set($my_related_pages_title = "Related Resources")##
#end##
#set($related_pages_slot = "cgvRelatedPages")
#initslot($related_pages_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div class="related-resources">##
<h3>$my_related_pages_title</h3>##
<ul>##		
#slot($related_pages_slot "" "<li>" "</li>" "" "")##
</ul>##
</div>##
#end##
#endslot($related_pages_slot)##
#end##


##List Box CTP - draws rightbox for CTP pages
#macro(CGOV_List_Box_CTP $myBoxSlot $myEnglishTitle $mySpanishTitle $myBoxClass)
#set($my_locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($my_locale == "")##
#set($my_locale = "en-us")##
#end##
#if($my_locale == "es-us")##
#set($my_related_pages_title = $mySpanishTitle)##
#else
#set($my_related_pages_title = $myEnglishTitle)##
#end##
#initslot($myBoxSlot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div class=$myBoxClass>##
<h3>$my_related_pages_title</h3>##
<ul>##		
#slot($myBoxSlot "" "<li>" "</li>" "" "")##
</ul>##
</div>##
#end##
#endslot($myBoxSlot)##
#end##







##False values in checkboxes come back as null or empty, this outputs false
#macro(matchUp $boolVal)##
#if ($boolVal==true)##

$boolVal##
#else##
false##
#end##
#end##

##Strip the -us from en-us language code
##This may have to be generalized at some point
#macro(StripUs $languageCode)##
#if ($languageCode && $languageCode == "en-us")##
en##
#else##
$languageCode##
#end##
#end##

##Build an RSS xml document from the specified macros
##All parameters are required:
##$query must be passed in either as a query or as an empty string
##The $isPublish nonsense is to enable display of XML text in preview
#macro(buildRSSXML $isPublish $slot $link $maxres $query $param)
#if($link.length() >= 8)##
#set($linkStart = "$link.substring(0,7)")##
#else##
#set($linkStart = "no")##
#end
#set($htt = "http://")##
#if ($isPublish)##
#set($leftB = "<")##
#set($rightB = ">")##
#set($break = "")##
#else##
#set($leftB = "&lt;")##
#set($rightB = "&gt;")##
#set($break = "<br/>")##
#end##
#set($firstLine = $leftB + '?xml version="1.0" encoding="utf-8"?' + $rightB)##
$firstLine##
$break
$leftB##
rss version="2.0"##
$rightB##
$break
$leftB##
channel##
$rightB##
$break
$leftB##
title##
$rightB##
$leftB##
![CDATA[##
#Unencode_Html($sys.item.getProperty("rx:long_title").String)##
]]##
$rightB##
$leftB##
/title##
$rightB##
$break
$leftB##
link##
$rightB##
#if($linkStart == $htt)##
#set($nourl = $link.substring($link.indexOf('/',7),$link.length()))##
##set($url = $link)##
#else##
#set($nourl = $link)##
#end##
#set($url = $sys.site.url + $nourl)##
$url##
$leftB##
/link##
$rightB##
$break
$leftB##
description##
$rightB##
#Unencode_Html($sys.item.getProperty("rx:long_description").String)##
$leftB##
/description##
$rightB##
$break
$leftB##
language##
$rightB##
#field("sys_lang")##
$leftB##
/language##
$rightB##
$break
#if($query != "")##
	#if($maxres != "")
		#slot("$slot" "" "" "" "" "query=$query&max_results=$maxres")##
	#else
		#slot("$slot" "" "" "" "" "query=$query")##
	#end
#elseif($param != "")##
	#slot("$slot" "" "" "" "" $param)##
#else##
	#slot("$slot" "" "" "" "" "")##
#end##
$leftB##
/channel##
$rightB##
$break
$leftB##
/rss##
$rightB##
#end##

##      Unencode_Html 
## 
##     $string - the java string to unencode of html chars. 
## 
#macro(Unencode_Html $string) 
#RemoveHtml($sys.getClass().forName('org.apache.commons.lang.StringEscapeUtils').newInstance().unescapeHtml($string))## 
#end

#macro(RSS_Link)
#set($loc = $rx.location.generate($sys.assemblyItem).String)##
#if($loc.substring(0,4).equalsIgnoreCase("html:"))##
#set($url = $loc)##
#else##
#set($url = $sys.site.url + $loc)##
#end##
$url
#end##

##TCGA's Style Sheet Setup the Head tag

#macro(TCGA_Style_Header)
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type">
<title>The Cancer Genome Atlas</title>
<link media="all" type="text/css" href="$rxs_navbase/stylesheets/tcga.css" rel="stylesheet" />
<style charset="utf-8" type="text/css" id="" rel="stylesheet"></style></head>
#end



#macro(TCGA_Breadcrumb_Helper $node $path $parentPath $parentLink $lastFolder)
#initslot("rffNav" "template=rffSnNavonLink")##
#set($nav = $sys.currentslot.relresults.get(0).getBindings().get('$nav') )
##set($homelink = $node.getProperty("nav:url").String)##
##set($hometitle = $node.getProperty("rx:nav_title").String )##
#set($homelink = $nav.root.getProperty("nav:url").String)##
#set($hometitle = $nav.root.getProperty("rx:nav_title").String )##
#if($homelink != "#")
#set($path = $path + '<li><a href="' + "$homelink" + '">' + $hometitle + '</a></li>')##
#set($parentLink = $homelink)##
#else
#set($path = $path + '<li>' + $hometitle + '</li>')##
#end
#set($parentPath = $parentPath + $hometitle)##
#TCGA_Recurse_Breadcrumb($node.getNodes("nav:submenu") $path $parentPath $parentLink $lastFolder)##
#end##
##

#macro(TCGA_Recurse_Breadcrumb $nodes $path $parentPath $parentLink $lastFolder)##
#foreach ($node in $nodes)##
#TCGA_Breadcrumb_node_helper($node $path $parentPath $parentLink $lastFolder)##
#end##
#end##
##

#macro(TCGA_Breadcrumb_node_helper $node $path $parentPath $parentLink $lastFolder)
#set($axis = $node.getProperty("nav:axis").String)##

#set($landing_page = $node.getProperty("nav:url").String)##
#set($title = $node.getProperty("rx:nav_title").String )##
#if($title == "" )
#set($title = $node.getProperty("rx:sys_title").String)##
#end
#if ($axis == "ANCESTOR" || $axis == "PARENT")##
#if($landing_page != "#")
#set($path = $path + '<li><a href="' + "$landing_page" + '">' + $title + '</a></li>')##
#else
#set($path = $path + '<li>' + $title + '</li>')##
#end
#set($count = $count + 1)##
#set($parentLink = $landing_page)##
#set($parentPath = $parentPath + '/' + $title)##
#TCGA_Recurse_Breadcrumb($node.getNodes("nav:submenu") $path $parentPath $parentLink $lastFolder)##
#elseif($axis == "SELF")##
#if($landing_page != "#")
#if($title != $lastFolder)
#set($path = $path + '<li><a href="' + "$landing_page" + '">' + $title + '</a></li>')##
#end
##set($lastFolder = $landing_page)##
#else
#if($title != $lastFolder)
#set($path = $path + '<li>' + $title + '</li>')##
#end
#end
#set($count = $count + 1)##
#TCGA_Recurse_Breadcrumb($node.getNodes("nav:submenu") $path $parentPath $parentLink $lastFolder)##
#else##
#end##
#end


##TCGA's Breadcrumb Creation for the top of each page.
#macro(TCGA_Breadcrumb)
#set($mainPath = "")##
#set($lastFolderCheck = $sys.item.getProperty("rx:short_title").String)
#TCGA_Breadcrumb_Helper($nav.root $mainPath "" "" $lastFolderCheck)##
<ul class="breadcrumb">
#set($mainPath = $mainPath + '<li class="last">' + $sys.item.getProperty("rx:short_title").String + '</li>')##
$mainPath##
</ul>
#end

##Displays a numbered month as its String representation.
## $field - The RX field to get the month string of.
#macro(displayMonthAsString $field)
#set($month = $tools.date.getMonth($sys.item.getProperty("rx:$field").Date) + 1)
#getMonthNameFromNumber($month)
#end

#macro(getMonthNameFromNumber $month)
#if($month == "1")
January
#elseif($month == "2")
February
#elseif($month == "3")
March
#elseif($month == "4")
April
#elseif($month == "5")
May
#elseif($month == "6")
June
#elseif($month == "7")
July
#elseif($month == "8")
August
#elseif($month == "9")
September
#elseif($month == "10")
October
#elseif($month == "11")
November
#elseif($month == "12")
December
#else
Null
#end
#end

#macro(getNewsPortalDate_CDE $cdeDate)
#if($cdeDate.substring(0,1) == "0")
#set($monthNum = $cdeDate.substring(1,2))
#else
#set($monthNum = $cdeDate.substring(0,2))
#end
##
#if($cdeDate.substring(3,4) == "0")
#set($dateNum = $cdeDate.substring(4,5))
#else
#set($dateNum = $cdeDate.substring(3,5))
#end
#getMonthNameFromNumber($monthNum) $dateNum, $cdeDate.substring(6,10)
#end

#macro(getNewsPortalDate $datefieldname)
#displayMonthAsString($datefieldname) $tools.date.getDay($sys.item.getProperty("rx:$datefieldname").Date), $tools.date.getYear($sys.item.getProperty("rx:$datefieldname").Date)
#end


##TCGA Title Header
##Displays the title for the page that is passed in, and the rss
## feed if it is available.
## $title - The string title to be passed in to the macro.
#macro(tcgaTitle $title)
<h2>$title##
##if(rssfeed?)
##<img height="16" width="16" alt="RSS" src="images/general/header-rss.gif">##
##end
</h2>
#end

##Format Hours to AM/PM
## $hours - the 24 hour representation of the time.
## $display - the display of the hours + am/pm after the method call.
##
#macro(formatHoursAMPM $hours $display)
#set($temp = $hours.toInteger())
#if($temp >= 13)
#set($temp = $temp - 12)
#set($display = $temp + " PM")
#else
#set($display = $temp + " AM")
#end
#end

#*
	TCGA_Html_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date

		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(TCGA_Html_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#define($postedDisplay)##
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
Posted: #datefield($fieldName "MMMM d, yyyy")##

#end
#{end}##
##
#define($updateDisplay)##
#set($fieldName = "date_last_modified")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
Last Updated: #datefield($fieldName "MMMM d, yyyy")##
#end
#{end}##
##
#define($reviewDisplay)##
#set($fieldName = "date_last_reviewed")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
Reviewed: #datefield($fieldName "MMMM d, yyyy")##
#end
#{end}##
##
##  Output the fields according to the bitmapped $dateDisplay value.
##	Too bad VTL doesn't have bitwise operators.
##
#if ( $dateDisplay == '1')
<p><span class="date">${postedDisplay}</span></p>
#elseif ( $dateDisplay == '2')
<p><span class="date">${updateDisplay}</span></p>
#elseif ( $dateDisplay == '3')
<p><span class="date">${postedDisplay}<img width="12" height="15" border="0" alt="" src="$rxs_imageBase/spacer.gif" />
${updateDisplay}</span></p>
#elseif ( $dateDisplay == '4')
<p><span class="date">${reviewDisplay}</span></p>
#elseif ( $dateDisplay == '5')

<p><span class="date">${postedDisplay}<img width="12" height="15" border="0" alt="" src="$rxs_imageBase/spacer.gif" />
${reviewDisplay}</span></p>
#elseif ( $dateDisplay == '6')
<p><span class="date">${updateDisplay}<img width="12" height="15" border="0" alt="" src="$rxs_imageBase/spacer.gif" />
${reviewDisplay}</span></p>
#elseif ( $dateDisplay == '7')
<p><span class="date">${postedDisplay}<img width="12" height="15" border="0" alt="" src="$rxs_imageBase/spacer.gif" />
${updateDisplay}<img width="12" height="15" border="0" alt="" src="$rxs_imageBase/spacer.gif" />
${reviewDisplay}</span></p>
#end
#end

#*
	TCGA_Html_Simple_Date_Display
	
	Renders the document's First Posted, Last Updated and Last Reviewed dates
	(date_first_published, date_last_modified and date_last_reviewed fields).
	Selection of which fields to display is based on the $dateDisplay variable
	(template-level binding) with bitmapped values:
		1 - Display the First Posted date
		2 - Display the Last Updated date

		4 - Display the Last Reviewed date.
	If a given field is empty or not present, its display is suppressed.
*#
#macro(TCGA_Html_Simple_Date_Display)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
#define($postedDisplay)##
#set($type = $sys.item.definition.name)
#set($fieldName = "date_first_published")
#if($sys.item.getProperty($fieldName) && !$sys.item.getProperty($fieldName).isNull())##
#if($type == "rx:tcgaSeries")
#datefield($fieldName "MMMM yyyy")##
#else
#datefield($fieldName "MMMM dd, yyyy")##
#end
#end
#{end}##
${postedDisplay}
#end

##	TCGA_Series_Type	
##	Renders the document's series type
##
#macro(TCGA_Series_Type $my_seriesType)##
##
##
## Define various date outputs. (Empty if the date is not available.)
##
<span class="type-treatment">##
#if($my_seriesType == "LeadershipUpdate")##
LEADERSHIP UPDATE##
#elseif ($my_seriesType == "ResearchBrief")##
RESEARCH BRIEFS##
#elseif ($my_seriesType == "InAction")##
TCGA IN ACTION##
#elseif ($my_seriesType == "Perspectives")##
PERSPECTIVES##
#elseif ($my_seriesType == "Announcements")##
ANNOUNCEMENTS##
#elseif ($my_seriesType == "NewsRelease")##
NEWS RELEASE##
#end
</span>##
#end

##	TCGA_Series_More_Link	
##	Renders the document's series type
##
#macro(TCGA_Series_More_Link $my_seriesType $my_isPublish $my_parentFolderUrl $my_parentFolderGuid)##
##
##
## Define more link for series pages. 
##
#define($moreLinkText)##
#if($my_seriesType == "LeadershipUpdate")##
Leadership Updates##
	#set($link = "/researchhighlights/leadershipupdate")
#elseif ($my_seriesType == "ResearchBrief")##
Research Briefs##
	#set($link = "/researchhighlights/researchbriefs")
#elseif ($my_seriesType == "InAction")##
TCGA In Action##
	#set($link = "/researchhighlights/tcgainaction")
#elseif ($my_seriesType == "Perspectives")##
Perspectives##
	#set($link = "/researchhighlights/perspectives")
#elseif ($my_seriesType == "Announcements")##
Announcements##
	#set($link = "/newsevents/newsannouncements")
#elseif ($my_seriesType == "NewsRelease")##
News Release
	#set($link = "/newsevents/newsannouncements")
#elseif ($my_seriesType == "tcgaASlotMMVideo")##
Videos##
	#set($link = "/newsevents/multimedialibrary/videos")
#elseif ($my_seriesType == "tcgaASlotMMInteractive")##
Interactive##
	#set($link = "/newsevents/multimedialibrary/interactives")
#elseif ($my_seriesType == "tcgaASlotMMImage")##
Images##
	#set($link = "/newsevents/multimedialibrary/images")
#elseif ($my_seriesType == "tcgaASlotMMAudio")##
Audio##
	#set($link = "/newsevents/multimedialibrary/audio")
#elseif ($my_seriesType == "Press Release")##
Press Releases and Announcements##
	#set($link = "/newsevents/newsannouncements")
#end
#{end}##
###if($my_isPublish)##
##<a href="$my_parentFolderUrl">More $moreLinkText ></a>##
###else##
##<a href="$my_parentFolderGuid">More $moreLinkText ></a>##
###end
<a href="$link">More $moreLinkText ></a>##
#end

##Modification of the Percussion slot pager.  Displays (if the pages are available)
##		$previous_markup $page-2 $page-1 $page $pag+1 $pag+2 $next_markup
##		Each display is a link to the individual page matching to that page number.
##Params-
##	$count - number of total pages
##	$page - current page number
##	$previous_markup - the text to display for the previous link, EXP: "< Prev"
##	$pagetext - the display for the current page, normally just the page number.
##	$next_markup - the text to display for the next link, EXP: "Next >"
#macro(jpager $count $page $previous_markup $pagetext $next_markup)##
#set($last = $page - 1)##
#set($last2 = $page - 2)##
#set($next = $page + 1)##
#set($next2 = $page + 2)##
#set($count1 = $count - 1)##
#set($count2 = $count - 2)##
#set($template = $sys.assemblyItem.Template.Name)##
#if($page == 2)##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
$previous_markup</a>##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
 $last</a>##
#elseif($page >= 3)##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
$previous_markup</a>##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last2)">##
 $last2</a>##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
 $last</a>##
#end##
#if ($count > 1)##
 $pagetext ##
#end##
#if($page <= $count2)
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
$next</a>##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next2)">##
 $next2</a>##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
 $next_markup</a>##
#elseif($page <= $count1 )
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
$next</a>##
<a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
 $next_markup</a>##
#end
#end

##Modification of the Percussion slot pager for general sites.  Displays (if the pages are available)
##		$previous_markup $page-2 $page-1 $page $pag+1 $pag+2 $next_markup
##		Each display is a link to the individual page matching to that page number.
##		USES DIFFERENT SYTLING THEN JPAGER FOR TCGA
##Params-
##	$count - number of total pages
##	$page - current page number
##	$previous_markup - the text to display for the previous link, EXP: "< Prev"
##	$pagetext - the display for the current page, normally just the page number.
##	$next_markup - the text to display for the next link, EXP: "Next >"
#macro(genpager $count $page $previous_markup $pagetext $next_markup)##
<ul class="genSitePagination">
#set($last = $page - 1)##
#set($last2 = $page - 2)##
#set($next = $page + 1)##
#set($next2 = $page + 2)##
#set($count1 = $count - 1)##
#set($count2 = $count - 2)##
#set($template = $sys.assemblyItem.Template.Name)##
#if($page == 2)##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
$previous_markup</a></li>##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
$last</a></li>##
#elseif($page >= 3)##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
$previous_markup</a></li>##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last2)">##
$last2</a></li>##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$last)">##
$last</a></li>##
#end##
#if ($count > 1)##
<li>$pagetext</li>##
#end##
#if($page <= $count2)
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
$next</a></li>##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next2)">##
$next2</a></li>##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
$next_markup</a></li>##
#elseif($page <= $count1 )
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
$next</a></li>##
<li><a href="$rx.location.generateToPage($sys.assemblyItem,$template,$next)">##
$next_markup</a></li>##
#end
</ul>
#end

## slot_page macro displays the content of a paged slot, with parameters, with text specified for before and after each slot's content, 
## and with header and footer text. The header and footer are omitted if the contents of the slot is empty. 
## Note, $sys.pagecount must be specified as one of the binding variables in the Template; otherwise additional pages may not be published.  
## For example, $sys.pagecount=$rx.paginate.slotContentPageCount($sys.assemblyItem,$slotname,$pagesize,$sys.params)
##
## This is a modified version of that to allow for the first object returned to be skipped (if that object is being printed out
## another way with different formatting)
##
#macro(slot_page_highlight $slotname $header $before $after $footer $params $itemsPerPage $pageNumber $highlight)##
	#initslot_page($slotname $params $itemsPerPage $pageNumber)
	#if($pageNumber != 1)
    	#if($sys.currentslot.slot && $sys.currentslot.relresults.size() > 0)
      		$header
      		#foreach($relresult in $sys.currentslot.relresults )
        		$before
          		#slotItem($relresult)
          		$after
      		#end
      		$footer
   		#end
	#else
		#set($count = 0)
	    #if($sys.currentslot.slot && $sys.currentslot.relresults.size() > 0)
      		$header
      		#foreach($relresult in $sys.currentslot.relresults )
        		###if($count != 0 || $highlight == "")
				##	$before
          		##	#slotItem($relresult)
          		##	$after
				###end
				#if($highlight == "")
					$before
          			#slotItem($relresult)
          			$after
				#else
					#if($count != 0)
						$before
          				#slotItem($relresult)
          				$after
					#end
				#end
				#set($count = $count + 1)
      		#end
      		$footer
   		#end
	#end
#end

#macro(share_bar)
<!-- AddThis Button BEGIN -->
<br clear="all" />
<div class="share">
<a class="addthis_button" href="http://www.addthis.com/bookmark.php?v=250&amp;username=xa-4cd94f702dd1be5b"><img src="http://s7.addthis.com/static/btn/v2/lg-share-en.gif" width="125" height="16" alt="Bookmark and Share" style="border:0"/></a>
<script type="text/javascript" src="http://s7.addthis.com/js/250/addthis_widget.js#username=xa-4cd94f702dd1be5b"></script>
</div>

<!-- AddThis Button END -->
#end

##	TCGA_Landing_Page_More_Link	
##	Renders the document's list type for the link display
##
#macro(TCGA_Landing_Page_More_Link $listType)##
#if($listType == "tcgaASlotWebinar")
More##
#elseif($listType == "tcgaASlotPerspective")
##Previous Editorials##
View All##
#elseif($listType == "tcgaASlotResearch" || $listType == "tcgaASlotCitation" || $listType == "tcgaASlotNewsAnnouncements" || $listType == "tcgaASlotUpcomingEvents" || $listType == "tcgaASlotSingleYear" || $listType == "tcgaASlotPastYears" || $listType == "tcgaASlotNewsLink")
View All##
#elseif($listType == "tcgaASlotMMVideo")
More Videos##
#elseif($listType == "tcgaASlotMMImage")
More Images##
#elseif($listType == "tcgaASlotMMInteractive")
More Interactive Content##
#elseif($listType == "tcgaASlotMMAudio")
More Audio Files##
#elseif($listType == "tcgaASlotInAction")
More Stories##
#elseif($listType == "tcgaASlotLeadershipUpdate")
##Previous Columns##
View All##
#end
#end

##	TCGA_Landing_Page_More_Link	
##	Renders the document's list type
##
#macro(TCGA_Landing_Page_Title $listType)##
#if($listType == "tcgaASlotWebinar")
PROGRAM HIGHLIGHTS##
#elseif($listType == "tcgaASlotPerspective")
EDITORIALS##
#elseif($listType == "tcgaASlotResearch")
RESEARCH BRIEFS##
#elseif($listType == "tcgaASlotCitation")
PUBLICATIONS##
#elseif($listType == "tcgaASlotNewsAnnouncements")
NEWS RELEASES AND ANNOUNCEMENTS##
#elseif($listType == "tcgaASlotUpcomingEvents")
UPCOMING EVENTS##
#elseif($listType == "tcgaASlotSingleYear")
PAST EVENTS##
#elseif($listType == "tcgaASlotPastYears")
PAST EVENTS##
#elseif($listType == "tcgaASlotNewsLink")
TCGA IN THE NEWS##
#elseif($listType == "tcgaASlotMMVideo")
VIDEOS##
#elseif($listType == "tcgaASlotMMImage")
IMAGES##
#elseif($listType == "tcgaASlotMMInteractive")
INTERACTIVE CONTENT##
#elseif($listType == "tcgaASlotMMAudio")
AUDIO##
#elseif($listType == "tcgaASlotInAction")
STORIES##
#elseif($listType == "tcgaASlotLeadershipUpdate")
COLUMNS##
#end
#end

##Related Pages Box
#macro(TCGA_Related_Pages)##
#set($tcga_related_pages_slot = "tcgaSlotRelatedPages")##
#initslot($tcga_related_pages_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div class="box related">##
<h3>Related</h3>##	
<ul>##
#set($count = 1)
#foreach($relresult in $sys.currentslot.relresults )
#if($count == $sys.currentslot.relresults.size())
<li class="last">$rx.doc.extractBody($relresult)</li>
#else
<li>$rx.doc.extractBody($relresult)</li>
#end
#set($count = $count + 1)
#end##
</ul>##
</div>##
#end##
#end##

##Multimedia Box
#macro(TCGA_Multimedia_Box)##
#set($tcga_multimedia_slot = "tcgaSlotMultimedia")##
#initslot($tcga_multimedia_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div class="multimedia-sidebox">##
<h3>Multimedia</h3>##
#slot($tcga_multimedia_slot "" "" "" "" "")## 
</div>##
#end##
#end##

##Related Multimedia Box
#macro(TCGA_Related_Multimedia_Box)##
#set($tcga_multimedia_slot = "tcgaSlotRelatedMultimedia")##
#initslot($tcga_multimedia_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
<div class="related-multimedia">##
<h3>Related Multimedia</h3>##
<ul>##
#slot($tcga_multimedia_slot "" "" "" "" "max_results=3&template=tcgaSnMMRelatedImage")## 
</ul>##
</div>##
#end##
#end##


##TCGA Attachment Box
#macro(TCGA_PDF_Attachment)##
#set($tcga_attachment_slot = "nciFile")##
#initslot($tcga_attachment_slot "")##
#if($sys.currentslot.relresults.size() > 0)##
#set($file_url=$rx.location.generate($sys.assemblyItem, "nciBnFile"))
<a class="icon-pdf" href="${file_url}">Download as PDF</a>
#end##
#end##

##TCGA Generate RSS
## $item = The assembly item the RSS will represent.
#macro(TCGA_Generate_RSS $item)##
#set($rssLink = $rx.location.generate($item,"tcgaPgRSS"))
<a href="${rssLink}"><img height="16" width="16" alt="RSS" src="$rxs_imageBase/general/header-rss.gif"></a>
#end##

##TCGA Network Citation
#macro(TCGA_Network_Citation)##
#set($citationContents = $user.psoSlotTools.getSlotContents($sys.assemblyItem,'tcgaSlotCitation',$params))##
#set($tcgaNetworkCitations = $user.psoSlotTools.getSlotPropertyValues($citationContents,'rx:tcga_network'))##
#set($inNetwork = "false")##
#foreach( $tcgaNetworkCitation in $tcgaNetworkCitations )##
#if($tcgaNetworkCitation == "true")##
#set($inNetwork = "true")##
#end##
#end##
#if($inNetwork == "true")## 
* = <a href="#">TCGA Research Network</a>##
#end##
#end##

#*
	TCGA View Link
	TCGA Link generator for the entire site.
	
	$text - The link text to be displayed in the <a/>.
	$location - The desired link:
		LeadershipUpdate - ListPage
		ResearchBrief - List Page
		InAction - List Page
		Perspectives - List Page
		Announcements - List Page
		NewsRelease - List Page
		Press Release - List Page
		Upcoming Events - List Page
		TCGA In the News - List Page
		tcgaASlotMMVideo - Multimedia Video Index
		tcgaASlotMMImage - Multimedia Image Index
		tcgaASlotMMAudio - Multimedia Audio Index
		tcgaASlotMMInteractive - Multimedia Interactive Index
*#
#macro(TCGA_Link_Generator $text $location)##
#if($location == "tcgaASlotLeadershipUpdate")##
	#set($link = "/researchhighlights/leadershipupdate")
#elseif ($location == "tcgaASlotResearch")##
	#set($link = "/researchhighlights/researchbriefs")
#elseif ($location == "tcgaASlotInAction")##
	#set($link = "/researchhighlights/tcgainaction")
#elseif ($location == "tcgaASlotPerspective")##
	#set($link = "/researchhighlights/perspectives")
#elseif ($location == "tcgaASlotNewsAnnouncements")##
	#set($link = "/newsevents/newsannouncements")
#elseif ($location == "tcgaASlotNewsAnnouncements")##
	#set($link = "/newsevents/newsannouncements")
#elseif ($location == "tcgaASlotMMVideo")##
	#set($link = "/newsevents/multimedialibrary/videos")
#elseif ($location == "tcgaASlotMMInteractive")##
	#set($link = "/newsevents/multimedialibrary/interactives")
#elseif ($location == "tcgaASlotMMImage")##
	#set($link = "/newsevents/multimedialibrary/images")
#elseif ($location == "tcgaASlotMMAudio")##
	#set($link = "/newsevents/multimedialibrary/audio")
#elseif ($location == "tcgaASlotNewsAnnouncements")##
	#set($link = "/newsevents/newsannouncements")
#elseif ($location == "tcgaASlotUpcomingEvents")##
	#set($link = "/newsevents/events")
#elseif ($location == "tcgaASlotNewsLink")##
	#set($link = "/newsevents/inthenews")
#end
<a href="$link">$text</a>##
#end

## 
##     Takes in $title, prints out that string,  
##     with any html tags replaced by blank strings. 
## 
#macro(RemoveHtml $title) 
#set($display = $title.replaceAll("<[^>]+>","") )## 
#set($display = $display.replaceAll("&#153;", "&trade;"))##
$display 
#end

##
##		Takes in $title, prints the string
##		with any apostrophes escaped
##
#macro(EscapeApostrophe $title)
#set($display = $title.replaceAll("'","&#145;"))##
$display##
#end


#macro(GeneralRelatedPages)
#set($locale = $sys.item.getProperty("rx:sys_lang").String)##
#if($sys.site.path == "//Sites/Imaging")##
#if($locale == "en-us")##
#set($relatedLinkText = "Related Links")##
#else##
#set($relatedLinkText = "Related Links")##
#end##
#elseif($sys.site.path == "//Sites/Proteomics")##
#if($locale == "en-us")##
#set($relatedLinkText = "More Information")##
#else##
#set($relatedLinkText = "More Information")##
#end##
#else##
#set($relatedLinkText = "Related Links")##
#end##
#initslot("genSlotRelatedPages" "")##
#if($sys.currentslot.relresults.size() > 0)##
<h3>$relatedLinkText</h3>##
<ul class="genList wide">##
#slot("genSlotRelatedPages" "" "" "" "" "")##
</ul>##
#else##
##
#end##
#endslot("genSlotRelatedPages")##
#end

##creates a submenu removing showinnavigation false navons ignoring espanol for english nav
#macro(branchpruner $fullbranch $prunedbranch $navtitle)##
  #set($prunedbranch = [])##
  #if ($navtitle == "CancerGovMainNav" || $navtitle == "CancerGov")
  #foreach ($fullnavon in $fullbranch)##
  #set($navon_landing_page = $fullnavon.getProperty("nav:url").String)##
  #if ($fullnavon.getProperty("rx:show_in_nav").Boolean == true && $fullnavon.getProperty("rx:sys_title").String != "espanol" && $navon_landing_page && $navon_landing_page != '#')##
  #set($addingToArray = $prunedbranch.add($fullnavon))## 
  #end##
  #end##
  #else
  #foreach ($fullnavon in $fullbranch)##
  #if ($fullnavon.getProperty("rx:show_in_nav").Boolean == true)##
  #set($addingToArray = $prunedbranch.add($fullnavon))##   
  #end##
  #end## 
  #end## 
#end##
##

#macro(mobileLanguageTab)
#initslot("cgvLanguageTabs" "template=cgvSnTranslationURL")##
#if($sys.currentslot.relresults.size() > 0)##
<div class="languageToggle">##
#foreach($relresult in $sys.currentslot.relresults)
#if($sys.item.getProperty("rx:sys_lang").String == 'en-us')##
<a href="$rx.doc.extractBody($relresult)" class="ui-link">Español</a>##
#elseif($sys.item.getProperty("rx:sys_lang").String == 'es-us')##
<a href="$rx.doc.extractBody($relresult)" class="ui-link">English</a>##
#end##
#end##
</div>##
#end##
#endslot("cgvLanguageTabs")##
#end##

#macro(CDE_PubXml_MobileUrl $mobileUrl $desktopUrl $item $mobileSite $desktopSite)
#if(!$desktopSite && $mobileSite)
	##THIS PAGE IS ON DESKTOP - find the mobile url
	##find the item's current path
	##find the item's target site
	#set($targetSiteName = $mobileSite)
	#set($targetSiteId = $user.CGV_AssemblyTools.getSiteIdFromPath($mobileSite))
	##find the item's path on the target site
	#set($path = $user.CGV_AssemblyTools.isOnSite($rx.location.path($item.getNode()), $targetSiteName))
	#if($path != "")
		#set($template = $user.CGV_AssemblyTools.NCIFindDefaultTemplate($path, $item.getNode(), $targetSiteName))
		#set($path = $user.CGV_AssemblyTools.getFolderPathFromItemPath($path))
		#set($urlAfterSite = $rx.location.generate($template, $item.getNode(), $path, "public", $targetSiteId, 313) )
		#if($tools.number.toNumber($tools.list.get($sys.params.get('sys_context'),0)) > 0)
			##set($fullUrl = $rx.location.siteBase("$targetSiteId","false") + $urlAfterSite)
			#set($relativeUrl = $urlAfterSite)
		#else		##preview
			##set($fullUrl = $sys.variables.rxs_hostName + $urlAfterSite)
			#set($relativeUrl = $urlAfterSite)
		#end
		#set($mobileUrl = "<MobileURL>$relativeUrl</MobileURL>")
	#end
#elseif(!$mobileSite  && $desktopSite)
	##THIS PAGE IS ON MOBILE - find the desktop url
	##find the item's current path
	##find the item's target site
	#set($targetSiteName = $desktopSite)
	#set($targetSiteId = $user.CGV_AssemblyTools.getSiteIdFromPath($desktopSite))
	##find the item's path on the target site
	#set($path = $user.CGV_AssemblyTools.isOnSite($rx.location.path($item.getNode()), $targetSiteName))
	#if($path != "")
		#set($template = $user.CGV_AssemblyTools.NCIFindDefaultTemplate($path, $item.getNode(), $targetSiteName))
		#set($path = $user.CGV_AssemblyTools.getFolderPathFromItemPath($path))
		#set($urlAfterSite = $rx.location.generate($template, $item.getNode(), $path, "public", $targetSiteId, 304) )
		#if($tools.number.toNumber($tools.list.get($sys.params.get('sys_context'),0)) > 0)
			##set($fullUrl = $rx.location.siteBase("$targetSiteId","false") + $urlAfterSite)
			#set($relativeUrl = $urlAfterSite)
		#else##preview
			##set($fullUrl = $sys.variables.rxs_hostName + $urlAfterSite)
			#set($relativeUrl = $urlAfterSite)
		#end
		#set($desktopUrl = "<DesktopURL>$relativeUrl</DesktopURL>")
	#end
#end
#end

## This was to get the parent nav element for content pages
## in order to display a see also.  This is not going into 6.4,
## but the code maybe used in the future so it will not be removed
## yet.  If it is not done by 6.6, then this can be removed.
#macro(printMobileParentCategory)
#initslot("rffNav" "template=nciSectionDetailsXML")##
#if($sys.currentslot.relresults.size() > 0)##
#foreach($relresult in $sys.currentslot.relresults)##
#set($nav = $relresult.getNode())##
#end##
#end##
#if($nav)##
#set($landing_page = $nav.getParent().getProperty("nav:url").String)##
#define($url)##
#node_slot($nav.getParent() "rffNavLandingPage" "" "" "" "" "template=cgvMSnNavigationItem")##
#{end}##
<div data-role="collapsible" data-content-theme="c" class="subHeading">##
<h3>More from this Category</h3>##
<a href="$url" class="ui-link">##
#if($nav.getParent().getProperty("rx:nav_title").String != "")##
$nav.getParent().getProperty("rx:nav_title").String##
#else##
$nav.getParent().getProperty("nav:landingPage").Node.getProperty("rx:short_title").String##
#end##
</a>##
</div>##
#end##
#end##

## This was to get the parent nav element for content pages
## in order to display a see also.  This is not going into 6.4,
## but the code maybe used in the future so it will not be removed
## yet.  If it is not done by 6.6, then this can be removed.
#macro(printMobileFactSheetCategory)
#initslot("rffNav" "template=nciSectionDetailsXML")##
#if($sys.currentslot.relresults.size() > 0)##
#foreach($relresult in $sys.currentslot.relresults)##
#set($nav = $relresult.getNode())##
#end##
#end##
#if($nav)##
#set($landing_page = $nav.getParent().getProperty("nav:url").String)##
#define($url)##
#node_slot($nav.getParent() "rffNavLandingPage" "" "" "" "" "template=cgvMSnNavigationItem")##
#{end}##
#if($nav.getParent().getProperty("nav:landingPage").Node)##
<ul class="related-pages-list">##
<li>More from this Category: <a href="$url" class="ui-link">##
#if($nav.getParent().getProperty("rx:nav_title").String != "")##
$nav.getParent().getProperty("rx:nav_title").String##
#else##
$nav.getParent().getProperty("nav:landingPage").Node.getProperty("rx:short_title").String##
#end##
</a>##
</li>##
</ul>##
#end##
#end##
#end##
