## This file may contain additional velocity macros that 
## augment the built in macros
## This file must be encoded using UTF-8.

## Used to get the Nav Image Url 
#macro(imageurl $image $status)#if ($status == "rollover" )#imghelp($image "rffBnRolloverImage")#elseif ($status=="active")#imghelp($image "rffBnActiveImage")#else#imghelp($image "rffBnInactiveImage")#end#end

## helper macro ... context=0 needs to be dynamic
#macro(imghelp $image $template)$rx.location.generate($template, $image, $rx.location.folderPath($image),$sys.assemblyItem.getFilter().getName(), $sys.assemblyItem.getSiteId().longValue(), $tools.number.toNumber($tools.list.get($sys.params.get('sys_context'), 0)) )#end


##propagate slot functionality start
#macro(get_navon_node)
#if(!$nav)##
#initslot("rffNav" "template=rffSnNavonLink")##
#if($sys.currentslot.relresults.size() > 0)##
#set($nav = $sys.currentslot.relresults.get(0).getBindings().get('$nav') )
#end##
#end##
#end##


#macro(node_slot_b $node $slotname $header $before $after $footer $params $body)##
#set($foundslot=false)##
#__slotsetup($slotname $params)##
#set($cloneditem = $sys.assemblyItem.clone())##
$cloneditem.setNode($node)##
#set($sys.currentslot.relresults = $rx.asmhelper.assemble($cloneditem,$sys.currentslot.slot,$completeparams))##
#if($sys.currentslot.relresults.size() > 0)##
#set($foundslot=true)##
$header##
#foreach( $relresult in $sys.currentslot.relresults )##
$before##
$body##
$after##
#end##
$footer##
#end##
#end##
   
#macro(node_slot $node $slotname $header $before $after $footer $params)##
#node_slot_b($node $slotname $header $before $after $footer $params "$rx.doc.extractBody($relresult)")
#end

 


#macro(prop_slot_b $slotname $header $before $after $footer $params $body)##
#get_navon_node()##
#set($foundslot=false)##
#initslot($slotname $params)##
#if ($sys.part.render)##
#if($sys.currentslot.slot)##
#__addAaSlotImg($slotname)##
#__startAaSlotDiv($slotname)##
#if($sys.currentslot.relresults.size() > 0)##
#set($foundslot=true)##
$header##
#end##
#foreach($relresult in $sys.currentslot.relresults )##
$before##
#__startAaSnippetDiv($relresult $slotname)##
#__addAaSnippetImg($relresult $slotname)##
$body##
#__endAaSnippetDiv()##
$after##
#end##
#if($sys.currentslot.relresults.size() > 0)##
$footer##
#end##
#__endAaSlotDiv()##
#end##
#end##
#endslot($slotname)##
#if($foundslot!=true)##
#prop_slot_nav_b($nav.self $slotname $header $before $after $footer $params $body)##
#end##
#end##

#macro(prop_slot $slotname $header $before $after $footer $params)##
#prop_slot_b($slotname $header $before $after $footer $params "$rx.doc.extractBody($relresult)")
#end

 

#macro(prop_slot_nav_b $node $slotname $header $before $after $footer $params $body)##
#if($foundslot!=true)##
#set($landing = false)##
##set($landing = $node.getProperty('nav:landingPage').Node)
#if($landing)##
##node_slot_b($landing $slotname $header $before $after $footer $params $body)##
#end##
#end##
#__slotsetup($slotname $params)##
#set($cloneditem = $sys.assemblyItem.clone())##
$cloneditem.setNode($node)##
#set($sys.currentslot.relresults = $rx.asmhelper.assemble($cloneditem,$sys.currentslot.slot,$completeparams))##
#if($sys.currentslot.relresults.size() > 0)##
#set($foundslot=true)##
$header##
#foreach( $relresult in $sys.currentslot.relresults )##
$before##
$body##
$after##
#end##
$footer##
#end##
## Check Parent Navon
#if($foundslot!=true && $node.getDepth() > 0)##
#prop_slot_nav_b($node.getParent() $slotname $header $before $after $footer $params $body)##
#end##
#end##

 

#macro(prop_slot_nav $node $slotname $header $before $after $footer $params)
#prop_slot_b($node $slotname $header $before $after $footer $params "$rx.doc.extractBody($relresult)")
#end

 

#macro(prop_slot_simple_b $slotname $body)#prop_slot_b($slotname "" "" "" "" "" $body)#end
#macro(prop_slot_simple $slotname)#prop_slot_simple_b($slotname "$rx.doc.extractBody($relresult)")#end
##propagate slot functionality end
	
		

#macro(escfield $fieldname)##
$tools.esc.xml($sys.item.getProperty($fieldname).String)##
#end

#macro(cdatafield $fieldname)##
<![CDATA[$sys.item.getProperty($fieldname).String]]>
#end

#macro(SnippetHeader)
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Snippet</title>
	<meta content="Percussion Rhythmyx" name="generator"/>
  </head>
  <body>
#end

#macro(SnippetFooter)
	  </body>
</html>
#end
	
#macro(CDE_PubXml_Slot $slotname $renderslotname $params)##
#initslot($slotname $params)##
#foreach($relresult in $sys.currentslot.relresults )##
#set($nciTemplate = "~/SnippetTemplates/GenericHtmlContentSnippet.ascx" )## 
#set($nciTemplate = $relresult.Bindings.get('$localTemplatePath') )##
#set($body = "$rx.doc.extractBody($relresult)")##
##set($contentID = $relresult.getProperty('rx:sys_title'))##
#set($contentID = $rx.guid.getContentId($relresult.Id))##
#CDE_PubXml_OutputSnippetInfo($renderslotname $nciTemplate $body $contentID)##
#end##
#endslot($slotname)##
#end

#macro(BodyData)
	#field("body")
#end

#macro(XmlLocalBody)
	#XmlSnippet("MainContentSlot" "/SnippetTemplates/GenericHtmlContentSnippet.ascx" "#BodyData()" )
#end





#macro(globaltype)
#if ( $tools.number.toNumber($tools.list.get($sys.params.get('sys_context'),0)) > 0  ) 
	#xmlglobal()
#else
	#htmlglobal()
#end
#end

#macro(setup_snippet)
#if ( $tools.number.toNumber($tools.list.get($sys.params.get('sys_context'),0)) > 0  ) 
	#xmlsnippet()
#else
	#htmlsnippet()
#end
#end


#macro(htmlsnippet)
<html>
	<head>Snippet Template</head>
	<body>#inner()</body>
</html>
#end

## Below are macros for publishing files to the NCI.CDE System

## Common elements for all PageAssemblyInfo xml files

#* Output an XML element.  If the value is empty/missing, output
#  an empty element *#
#macro(CDE_PubXml_OutputElement $elementName $elementValue)
#if($elementValue)
<$elementName>$elementValue</$elementName>
#else
<$elementName />
#end
#end


## For the ContentDates element
#macro(CDE_PubXml_OutputContentDates)
	<ContentDates>
		<FirstPublished>#datefield("date_first_published" "yyyy-MM-dd'T'00:00:00")</FirstPublished> 
		<LastModified>#datefield("date_last_modified" "yyyy-MM-dd'T'00:00:00")</LastModified> 
		<LastReviewed>#datefield("date_last_reviewed" "yyyy-MM-dd'T'00:00:00")</LastReviewed> 
		<NextReview>#datefield("date_next_review" "yyyy-MM-dd'T'00:00:00")</NextReview> 
		<DateDisplayMode>Posted</DateDisplayMode> 
	</ContentDates>
#end

## Defines the path to the section details and the pretty url for the page.
## TODO: If the page is the "home page" for the section, it's $prettyPath
## might be empty, so there should be no trailing slash.
#macro(CDE_PubXml_OutputPaths)
##
## Retrieve the "filename" portion of the Pretty URL. 
#set($prettyUrlName = $sys.item.getProperty("rx:pretty_url_name").String )
	<PrettyUrl>$prettyUrlName</PrettyUrl> 
##
##  Render the section location via the nciLocationBuilder template
	<SectionPath>#slot("nciLocator"  "" "" "" "" "template=nciLocationBuilder")</SectionPath>
#end

## Outputs the PageMeta element
#macro(CDE_PubXml_OutputPageMeta)
	<PageMetadata>
		<LongTitle>#escfield("long_title")</LongTitle> 
		<ShortTitle>#escfield("short_title")</ShortTitle> 
		<LongDescription>#cdatafield("long_description")</LongDescription> 
		<MetaDescription>#escfield("meta_description")</MetaDescription> 
		<MetaKeywords>#escfield("meta_keywords")</MetaKeywords> 
	</PageMetadata>
#end

## This is here for items like the body field or related pages
## where there is not a real ContentItem/Snippet associated with this content item,
## but a field or other kind of thing (like just a plain ol slot with some items, e.g.
## related pages which will probably be a slot that contains links and this would
## output those links.  No list content items littered around the system.)
## that will "pretend" to be a snippetinfo.
##
#macro(CDE_PubXml_CreateTemplateSnippetInfos $slotName $templatePath $data $contentID)
#CDE_PubXml_OutputSnippetInfo($slotName $templatePath $data $contentID)
#end

##
## Outputs the SinglePageAssemblyInfo XML structure.
##
## Arguments:
##	$pageTemplateName - The name of the page template CDE should use
##						when rendering the page.
##
##	$templateSnippets - Pseudo snippets created in the individual template.
##						the contents of $templateSnippets must be generated via
##						the CDE_PubXml_CreateTemplateSnippetInfos macro.
##
##	$blockedSlotList - A list of slots which CDE should suppress.
##				The calling template should declare this list via
##				a statement similar to:
##					#set( $blockedSlots = ["slota", "slotb", "slotc"] )
##				An empty list would be declared as:
##					#set( $blockedSlots = [] )
##				
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en" (English) is used.
##
#macro(CDE_PubXml_OutputSinglePageAssemblyInfo $pageTemplateName $templateSnippets $blockedSlotList $languageCode)##
<?xml version="1.0" encoding="utf-8" ?>
<cde:SinglePageAssemblyInstruction xsi:schemaLocation="http://www.example.org/CDESchema CDESchema.xsd" xmlns:cde="http://www.example.org/CDESchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	#CDE_PubXml_OutputElement("PageTemplateName" $pageTemplateName)##
	#CDE_PubXml_OutputPaths()##
 	#CDE_PubXml_OutputPageMeta()##
	<Snippets>
		#if( $templateSnippets )##
			$templateSnippets##
		#end##
##
		## We need to get the snippets for all slots out.  How can we find all of the Content Items that are
		## related to this content item through active assembly slots??  I.E. We should not have to hard code
		## the names of all the possible slots for this item.  Well, we would need some excluded names that 
		## have special meaning.
		#CDE_PubXml_AllSlots()
	</Snippets>
	#CDE_PubXml_OutputBlockedSlots($blockedSlotList)
	#CDE_PubXml_OutputLanguage($languageCode)
</cde:SinglePageAssemblyInstruction>
#end

#macro(CDE_PubXml_AllSlots)
#set($slotNames=$user.psoRelationships.getItemSlots($sys.assemblyItem.getId()))##
## These are slots we know should be ignored.
#set($ignoreSlotNames = ["inline"])##
#foreach($slot in $slotNames)##
#set($renderSlotRegEx = "^[^_]*_([^_]*)_?.*")##
#set($renderSlotName = $slot.replaceAll($renderSlotRegEx,"$1"))##
#if( !$ignoreSlotNames.contains($renderSlotName) )##	
#CDE_PubXml_Slot($slot $renderSlotName "" )##
#end##
#end##
#end##

#macro(CDE_PubXml_OutputSnippetInfo $slotName $templatePath $data $contentItemID)##
	<SnippetInfo>
		<SnippetTemplatePath>$templatePath</SnippetTemplatePath> 
		<SlotName>$slotName</SlotName>
		<Data><![CDATA[
			$data
		]]></Data>
		#CDE_PubXml_OutputElement("ContentID" $contentItemID)
	</SnippetInfo>
#end
##
##  Outputs the list of slots which CDE should suppress.
##
#macro(CDE_PubXml_OutputBlockedSlots $blockedSlotList)##
	<BlockedSlots>
		#foreach($name in $blockedSlotList)
			<Slot Name="$name" />
		#end
	</BlockedSlots>
#end
##
##  Outputs the Language sub-structure.
##
## Arguments:
##	$languageCode - ISO 639-1 language code.  If this value is empty
##		a default value of "en" (English) is used.
#macro(CDE_PubXml_OutputLanguage $languageCode)
	#if( !$languageCode )
		#set( $languageCode = "en" )
	#end
	#CDE_PubXml_OutputElement("Language" $languageCode)
#end

##
##  Retrieves the content item's ID value.
##  This macro only works with Content Items, it does *NOT* work
##  slots or other structures. 
##
## Arguments:
##	$contentItem - 
##  
#macro(Get_Content_Item_ID $contentItem)
$contentItem.item.getProperty("rx:sys_contentid").String##
#end


##HTML Helper Macros
#macro(CGOV_Html_DisplayBackToTop)##
 #if ($sys.item.getProperty("backtotop").Boolean) 
		<a class="backtotop-link" href="#top"><img border="0" alt="Back to Top" src="http://www.cancer.gov/images/backtotop_red.gif">Back to Top</a>
		#end
#end



#macro(CGOV_Html_Date_Display)##
#if ( $dateDisplay == '1')
<tr>
<td valign="top" nowrap="" align="left"></td><td valign="bottom" nowrap="" align="right"><span class="gray"><img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Posted:</strong> #datefield("date_first_published" "MM/dd/yyyy")</span></td>
</tr>
#elseif ( $dateDisplay == '2')
<tr>
<td valign="top" nowrap="" align="left"></td><td valign="bottom" nowrap="" align="right"><span class="gray"><img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Updated:</strong> #datefield("date_last_modified" "MM/dd/yyyy")</span></td>
</tr>
#elseif ( $dateDisplay == '3')
<tr>
<td valign="top" nowrap="" align="left"></td><td valign="bottom" nowrap="" align="right">
<img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Posted:</strong> #datefield("date_first_published" "MM/dd/yyyy")
<span class="gray"><img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Updated:</strong> #datefield("date_last_modified" "MM/dd/yyyy")</span></td>
</tr>
#elseif ( $dateDisplay == '4')
  <tr>
<td valign="top" nowrap="" align="left"></td><td valign="bottom" nowrap="" align="right"><span class="gray"><img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Reviewed:</strong> #datefield("date_last_reviewed" "MM/dd/yyyy")</span></td>
</tr>
#elseif ( $dateDisplay == '5')
  <tr>
<td valign="top" nowrap="" align="left"></td><td valign="bottom" nowrap="" align="right"><span class="gray">
<img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Posted:</strong> #datefield("date_first_published" "MM/dd/yyyy")
<img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Reviewed:</strong> #datefield("date_last_reviewed" "MM/dd/yyyy")</span></td>
</tr>
#elseif ( $dateDisplay == '6')
  <tr>
<td valign="top" nowrap="" align="left"></td><td valign="bottom" nowrap="" align="right"><span class="gray"><img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Updated:</strong> #datefield("date_last_modified" "MM/dd/yyyy")<img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Reviewed:</strong> #datefield("date_last_reviewed" "MM/dd/yyyy")</span></td>
</tr>
#elseif ( $dateDisplay == '7')
  <tr>
<td valign="top" nowrap="" align="left"></td><td valign="bottom" nowrap="" align="right"><span class="gray">
<img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Posted:</strong> #datefield("date_first_published" "MM/dd/yyyy")
<img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Updated:</strong> #datefield("date_last_modified" "MM/dd/yyyy")
<img width="12" height="15" border="0" alt="" src="$rxs_navbase/images/spacer.gif"><strong>Reviewed:</strong> #datefield("date_last_reviewed" "MM/dd/yyyy")</span></td>
</tr>
#end
#end
